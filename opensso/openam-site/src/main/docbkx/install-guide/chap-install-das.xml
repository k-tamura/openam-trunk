<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011 ForgeRock AS
  !    
-->
<chapter xml:id='chap-install-das'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Installing OpenAM Distributed Authentication</title>
 <indexterm>
  <primary>Installing</primary>
  <secondary>Behind the firewall</secondary>
 </indexterm>
 <para>When you need to prevent end users from having direct access to the
 service URLs OpenAM uses to manage access, you can deploy the distributed
 authentication service (DAS) in your DMZ, leaving OpenAM core services behind
 the firewall that end users cannot access.</para>
 
 <para>You complete the following stages in deploying the DAS web
 service.</para>
 <orderedlist>
  <listitem>
   <para>Create the .war file for the DAS using OpenAM software.</para>
  </listitem>
  <listitem>
   <para>Deploy the DAS .war file into your web application container.</para>
   <para>How you deploy the DAS .war file depends on your web application
   container. The procedure in this section shows how to deploy on
   Apache Tomcat.</para>
  </listitem>
  <listitem>
   <para>Create an agent profile for the DAS.</para>
  </listitem>
  <listitem>
   <para>Configure the DAS UI to access OpenAM core services.</para>
  </listitem>
  <listitem>
   <para>Configure your firewall to allow end user access to the DAS.</para>
   <para>Firewall configuration is not described here.</para>
  </listitem>
 </orderedlist>
 
 <procedure xml:id="create-distributed-auth-file">
  <title>To Create the DAS <filename>.war</filename> File</title>
  
  <step>
   <para>Unpack the <filename>opensso.war</filename> file into a temporary
   directory.</para>
   <screen>$ mkdir -p /tmp/das ; cd /tmp/das
$ jar xf /path/to/OpenAM/deployable-war/opensso.war</screen>
  </step>
  <step>
   <para>Create the <filename>das.war</filename> file.</para>
   <screen>$ cd /path/to/OpenAM/deployable-war
$ sh createwar.sh --staging /tmp/das --type distauth --warfile das.war</screen>
  </step>
 </procedure>
 
 <procedure xml:id="deploy-distributed-auth-on-tomcat">
  <title>To Deploy the DAS on Tomcat</title>
 
  <step>
   <para>Put the <filename>das.war</filename> you created in the Tomcat
   <filename>webapps/</filename> directory.</para>
   <screen>$ mv das.war /path/to/tomcat/webapps/</screen>
  </step>
  <step>
   <para>Check that you see the initial DAS configuration screen
   in your browser.</para>
   <mediaobject>
    <alt>Initial DAS configuration screen</alt>
    <imageobject>
     <imagedata fileref="images/das-initial-screen.png" format="PNG" />
    </imageobject>
    <textobject><para>The first time you access the DAS, you must configure
    access to OpenAM.</para></textobject>
   </mediaobject>
  </step>
 </procedure>
 
 <procedure xml:id="create-distributed-auth-user">
  <title>To Create an Agent Profile for the DAS</title>
 
  <step>
   <para>Login to OpenAM as the administrator,
   <literal>amadmin</literal>.</para>
  </step>
  <step>
   <para>Under the Access Control &gt; click <literal>/ (Top Level
   Realm)</literal>.</para>
  </step>
  <step>
   <para>Under the Agents &gt; 2.2 Agents tab, click New... to open the
   New Agent page.</para>
  </step>
  <step>
   <para>Create a new agent user profile.</para>
   <para>The subsequent procedures in this section have an agent with name
   <literal>dasUser</literal> and password <literal>password</literal>.</para>
  </step>
 </procedure>
 
 <procedure xml:id="configure-distributed-auth">
  <title>To Configure the DAS</title>
 
  <step>
   <para>Configure the DAS using the agent profile to connect to OpenAM.</para>
   <mediaobject>
    <alt>Completed DAS configuration screen</alt>
    <imageobject>
     <imagedata fileref="images/das-complete-config.png" format="PNG" />
    </imageobject>
    <textobject><para>Configure access to OpenAM.</para></textobject>
   </mediaobject>
   <para>Most DAS configuration choices require no clarification. Hints for
   equivocal parameters follow.</para>
   <variablelist>
    <varlistentry>
     <term>Debug Level</term>
     <listitem>
      <para>Default is <literal>error</literal>. Other options include
      <literal>error</literal>, <literal>warning</literal>,
      <literal>message</literal>, and <literal>off</literal>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Encryption Key</term>
     <listitem>
      <para>Do not change the password encryption key.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Application User Name</term>
     <listitem>
      <para>The DAS uses this identity to authenticate internally to OpenAM.
      If you configured a 2.2 agent identity for the DAS in OpenAM, then this
      is the user name of the agent you created.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Application User Password</term>
     <listitem>
      <para>The DAS uses this password to authenticate internally to OpenAM.
      If you configured a 2.2 agent identity for the DAS in OpenAM, then this
      is the password of the agent you created.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </step>
  <step>
   <para>Login through the DAS to access OpenAM services.</para>
   <para>From the first time you test with either separate physical or virtual
   host systems housing OpenAM and the DAS, you must at least redirect the
   browser after successful login to a page that exists. One way to do this
   is to use the <literal>goto</literal> parameter in the URL.</para>
   <literallayout class="monospaced">https://das.example.com/das/UI/Login?goto=<replaceable>absolute-successful-redirect-URL</replaceable></literallayout>
   <para>As an alternative add sample authentication data, and a sample
   realm that gives you a landing page after successful login. Otherwise the
   default result of successful login is a redirect to the default success
   login URL, which is <literal>/openam/console</literal>, resulting in
   a successful login, but an error in the browser, since the DAS does not
   include the console. Indeed, <literal>/openam/console</literal> is a URL
   you probably do not want to expose outside the firewall. Instead,
   follow these steps to see the DAS at work.</para>
   <substeps>
    <step>
     <para>When setting up OpenAM, use OpenDJ with the sample data mentioned
     above.</para>
    </step>
    <step>
     <para>Login to the OpenAM console as the OpenAM Administrator,
     <literal>amadmin</literal>.</para>
    </step>
    <step>
     <para>Under the Access Control tab, in the Realms section, click New...
     to create a new Realm called Example.</para>
     <para>On the General tab for the Example realm, add
     <literal>.example.com</literal>.</para>
     <para>On the Authentication tab for the Example realm, make sure the
     Default Success Login URL list contains only the value
     <literal>/das/click/index.html</literal>.</para>
    </step>
    <step>
     <para>Edit the file
     <filename>/path/to/tomcat/webapps/das/click/index.html</filename> so it
     looks like this:</para>
     <programlisting language="html">&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Successful login&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;Congratulations, you have logged in successfully.&lt;/p&gt;
&lt;p&gt;Click &lt;a href="../UI/Logout.jsp"&gt;here&lt;/a&gt; to logout.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</programlisting>
    </step>
    <step>
     <para>In your browser, visit the login page.</para>
     <para>For example, if Apache Tomcat is listening on
     <literal>localhost:8080</literal>, then browse to
     <literal>http://localhost:8081/das/UI/Login?org=/Example</literal>.</para>
    </step>
    <step>
     <para>Login as a sample user from the <filename>Example.ldif</filename>
     file, such as user <literal>bjensen</literal> who has password
     <literal>hifalutin</literal>.</para>
    <mediaobject>
     <alt>Logging into OpenAM through the DAS</alt>
     <imageobject>
      <imagedata fileref="images/das-login-page.png" format="PNG" />
     </imageobject>
     <textobject><para>The DAS UI handles access to OpenAM.</para></textobject>
    </mediaobject>
    </step>
   </substeps>
   <mediaobject>
    <alt>Successfully logged in through the DAS</alt>
    <imageobject>
     <imagedata fileref="images/das-login-success.png" format="PNG" />
    </imageobject>
    <textobject><para>The DAS UI redirects the user to the URL you
    configured for the realm.</para></textobject>
   </mediaobject>
  </step>
  <step>
   <para>Restrict permissions to the configuration for the DAS under the
   <filename>$HOME/FAMDistAuth</filename> directory of the user who runs the
   web container where you deployed the service.</para>
   <para>The configuration file name ends in
   <filename>AMDistAuthConfig.properties</filename>.</para>
  </step>
 </procedure>
</chapter>
