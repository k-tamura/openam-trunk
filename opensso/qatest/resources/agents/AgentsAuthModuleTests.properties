/* The contents of this file are subject to the terms
 * of the Common Development and Distribution License
 * (the License). You may not use this file except in
 * compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://opensso.dev.java.net/public/CDDLv1.0.html or
 * opensso/legal/CDDLv1.0.txt
 * See the License for the specific language governing
 * permission and limitations under the License.
 *
 * When distributing Covered Code, include this CDDL
 * Header Notice in each file and include the License file
 * at opensso/legal/CDDLv1.0.txt.
 * If applicable, add the following below the CDDL Header,
 * with the fields enclosed by brackets [] replaced by
 * your own identifying information:
 * "Portions Copyrighted [year] [name of copyright owner]"
 *
 * $Id: 
 *
 * Copyright 2007 Sun Microsystems Inc. All Rights Reserved
 */

# AgentsAuthTest Properties are used to test the Policy Auth advices realted Conditions 
# using the agents. Currently the tests are to test realm qualified and non qualified
# authentication scheme and service based conditions

#######Identity creation properties########
# AgentsAuthModuleTests<i>.noOfIdentities = Number of identities to be created for the policy test i
#
# AgentsAuthModuleTests<i>.identity><i>.name=Name of the identity to be created
# AgentsAuthModuleTests<i>.identity><i>.type=type of the identity to be created (User, role, group)
# AgentsAuthModuleTests<i>.identity><i>.isMemberOf=whether this identity is the member of the group or role (boolean)
# AgentsAuthModuleTests<i>.identity<i>.memberOf=Name of the role or group which he is member of
# AgentsAuthModuleTests<i>.identity><i>.hasSessionAttributes=whether this identity 
#                                                            has session attributes to be set for 
#                                                            verification of session condition
#######Authentication module creation properties ########
# AgentsAuthModuleTests<i>.noOfAuthServices=Number of Authentication services to be created
# AgentsAuthModuleTests<i>.noOfAuthModules=Number of Authentication modules to be created
# AgentsAuthModuleTests<i>.noOfAuthModule<i>.type=Authentication module type
# AgentsAuthModuleTests<i>.noOfAuthModule<i>.noOfInstances=number of the instances of modules 
#                                                        that needs to be created
########Policy creation properties (subjects, rules, conditions and response providers) ########
# AgentsAuthModuleTests<i>.policy<i>.name=Name of the Policy
# AgentsAuthModuleTests<i>.policy<i>.description=Description of the Policy
# AgentsAuthModuleTests<i>.policy<i>.referral=Whether the policy is a referral or normal
# AgentsAuthModuleTests<i>.policy<i>.active=Boolean value for the policy active or inactive

#AgentsAuthModuleTests<i>.policy<i>.noOfRules=Number of the rules for the policy
#AgentsAuthModuleTests<i>.policy<i>.rule<i>.name=Name of the rule
#AgentsAuthModuleTests<i>.policy<i>.rule<i>.serviceName=Name of the service 
#                                           valid values are iPlanetAMWebAgentService
#AgentsAuthModuleTests<i>.policy<i>.rule<i>.resource=Resource URL that was defined in agentsGlobal.properties file
#AgentsAuthModuleTests<i>.policy<i>.rule<i>.noOfActions=Number of actions
#AgentsAuthModuleTests<i>.policy<i>.rule<i>.action0=Actions and values for the actions
#                                                   GET=allow,POST=allow,GET=deny,POST=deny            

#AgentsAuthModuleTests<i>.policy0<i>.noOfSubjects=1
#AgentsAuthModuleTests<i>.policy<i>.subject<i>.type=Type of AMIdentitySubject
#AgentsAuthModuleTests<i>.policy<i>.subject<i>.name=Name of the subject 
#AgentsAuthModuleTests<i>.policy<i>.subject<i>.includeType=Include type.Valid values are inclusive or exclusive
#AgentsAuthModuleTests<i>.policy<i>.subject<i>.att<i>=name of the subject. The valid values are the identities created 
#                                                     Identities to be created in AgentsAuthModuleTests<i>
#                                                     (Values=AgentsAuthModuleTests0.identity4)
#AgentsAuthModuleTests<i>.policy<i>.subject<i>.noOfAttributes=Number of subjects to be created
 
#AgentsAuthModuleTests<i>.policy<i>.noOfConditions=Number of conditions for Policy
#AgentsAuthModuleTests<i>.policy<i>.condition<i>.type=Type of Authentication Condition
#                                                     Valid values are AuthSchemeCondition, AuthenticateToServiceCondition,
#                                                     LEAuthLevelCondition, AuthLevelCondition, AuthenticateToRealmCondition

#AgentsAuthModuleTests<i>.policy<i>.condition<i>.name=Name of the condition
#AgentsAuthModuleTests<i>.policy<i>.condition<i>.noOfAttributes=Number of attributes to create the conditions
#AgentsAuthModuleTests<i>.policy<i>.condition<i>.att<i>=Condition value. This can be realm qualified or non realmqualified. 
#Valid attribute name=values for scheme are AuthScheme=/:<name of scheme> or <name of scheme>
#Valid attribute name=values for chain are AuthenticateToService=/:<name of service> or <name of service>
#Valid attribute name=values for AuthLevel are AuthLevel=/:<level> or <level>
#Valid attribute name=values for LEAuthLevel are AuthLevel=/:<level> or <level>
#Valid attribute name=values for Authentication to realm are AuthenticateToRealm=<name of realm> 

#AgentsAuthModuleTests<i>.policy<i>.noOfResponseProviders=Number of response providers to be created

#######Policy evaluation properties ###############
#AgentsAuthModuleTests<i>.evaluation<i>.resource=Value of the resource that will be accesed by the subject
#                                                Resource URL that was defined in agentsGlobal.properties file
#AgentsAuthModuleTests<i>.evaluation<i>.username=Username of the subject that will be accessing the resource
#AgentsAuthModuleTests<i>.evaluation<i>.password=Password of the subject that will be accessing the resource
#AgentsAuthModuleTests<i>.evaluation<i>.noOfModules=Expected modules to be displayed to the subject for authentication
#AgentsAuthModuleTests<i>.evaluation<i>.module<i>.type=Type of module to be expected
#AgentsAuthModuleTests<i>.evaluation<i>.module<i>.type=Membership
#AgentsAuthModuleTests<i>.evaluation<i>.expectedResult=String that will be displayed on the browser for test validation
#AgentsAuthModuleTests<i>.evaluation<i>.description=Test description

#################################################################################################################
# ATTRIBUTES FOR POLICY TEST 0== Realm qualified and non qualified auth conditions
# EXECUTION_MODES : "ldapv3", "ldapv3_sec", "s1ds", "s1ds_sec", "ad", "ad_sec", "amsdk", "amsdk_sec", "jdbc", "jdbc_sec"
##################################################################################################################
AgentsAuthModuleTests0.noOfIdentities=15

AgentsAuthModuleTests0.identity0.name=group1
AgentsAuthModuleTests0.identity0.type=Group
AgentsAuthModuleTests0.identity0.attributes=
AgentsAuthModuleTests0.identity0.isMemberOf=no
AgentsAuthModuleTests0.identity0.hasSessionAttributes=false
AgentsAuthModuleTests0.identity1.name=group2
AgentsAuthModuleTests0.identity1.type=Group
AgentsAuthModuleTests0.identity1.attributes=
AgentsAuthModuleTests0.identity1.isMemberOf=no
AgentsAuthModuleTests0.identity1.hasSessionAttributes=false
AgentsAuthModuleTests0.identity2.name=role1
AgentsAuthModuleTests0.identity2.type=Role
AgentsAuthModuleTests0.identity2.attributes=
AgentsAuthModuleTests0.identity2.isMemberOf=no
AgentsAuthModuleTests0.identity2.hasSessionAttributes=false
AgentsAuthModuleTests0.identity3.name=role2
AgentsAuthModuleTests0.identity3.type=Role
AgentsAuthModuleTests0.identity3.attributes=
AgentsAuthModuleTests0.identity3.isMemberOf=no
AgentsAuthModuleTests0.identity4.name=user0
AgentsAuthModuleTests0.identity4.type=User
AgentsAuthModuleTests0.identity4.attributes=sn=user0,cn=user0,userpassword=user0,inetuserstatus=Active
AgentsAuthModuleTests0.identity4.isMemberOf=no
AgentsAuthModuleTests0.identity4.hasSessionAttributes=false
AgentsAuthModuleTests0.identity5.name=roleuser1
AgentsAuthModuleTests0.identity5.type=User
AgentsAuthModuleTests0.identity5.attributes=sn=roleuser1,cn=roleuser1,userpassword=roleuser1,inetuserstatus=Active
AgentsAuthModuleTests0.identity5.isMemberOf=yes
AgentsAuthModuleTests0.identity5.memberOf=AgentsAuthModuleTests0.identity2
AgentsAuthModuleTests0.identity5.hasSessionAttributes=false
AgentsAuthModuleTests0.identity6.name=groupuser1
AgentsAuthModuleTests0.identity6.type=User
AgentsAuthModuleTests0.identity6.attributes=sn=groupuser1,cn=groupuser1,userpassword=groupuser1,inetuserstatus=Active
AgentsAuthModuleTests0.identity6.isMemberOf=yes
AgentsAuthModuleTests0.identity6.memberOf=AgentsAuthModuleTests0.identity0
AgentsAuthModuleTests0.identity6.hasSessionAttributes=false
AgentsAuthModuleTests0.identity7.name=user1
AgentsAuthModuleTests0.identity7.type=User
AgentsAuthModuleTests0.identity7.attributes=sn=user1,cn=user1,userpassword=user1,inetuserstatus=Active
AgentsAuthModuleTests0.identity7.isMemberOf=no
AgentsAuthModuleTests0.identity7.hasSessionAttributes=false
AgentsAuthModuleTests0.identity8.name=groupuser2
AgentsAuthModuleTests0.identity8.type=User
AgentsAuthModuleTests0.identity8.attributes=sn=groupuser2,cn=groupuser2,userpassword=groupuser2,inetuserstatus=Active
AgentsAuthModuleTests0.identity8.isMemberOf=yes
AgentsAuthModuleTests0.identity8.memberOf=AgentsAuthModuleTests0.identity1
AgentsAuthModuleTests0.identity8.hasSessionAttributes=false
AgentsAuthModuleTests0.identity9.name=roleuser2
AgentsAuthModuleTests0.identity9.type=User
AgentsAuthModuleTests0.identity9.attributes=sn=roleuser2,cn=roleuser2,userpassword=roleuser2,inetuserstatus=Active
AgentsAuthModuleTests0.identity9.isMemberOf=yes
AgentsAuthModuleTests0.identity9.memberOf=AgentsAuthModuleTests0.identity3
AgentsAuthModuleTests0.identity9.hasSessionAttributes=false
AgentsAuthModuleTests0.identity10.name=user2
AgentsAuthModuleTests0.identity10.type=User
AgentsAuthModuleTests0.identity10.attributes=sn=user2,cn=user2,userpassword=user2,inetuserstatus=Active
AgentsAuthModuleTests0.identity10.isMemberOf=no
AgentsAuthModuleTests0.identity10.hasSessionAttributes=false
AgentsAuthModuleTests0.identity11.name=administrator
AgentsAuthModuleTests0.identity11.type=User
AgentsAuthModuleTests0.identity11.attributes=sn=administrator,cn=administrator,userpassword=secret12,inetuserstatus=Active
AgentsAuthModuleTests0.identity11.isMemberOf=no
AgentsAuthModuleTests0.identity11.hasSessionAttributes=false
AgentsAuthModuleTests0.identity11.password=secret12
AgentsAuthModuleTests0.identity12.name=rivendell
AgentsAuthModuleTests0.identity12.type=User
AgentsAuthModuleTests0.identity12.attributes=sn=rivendell,cn=rivendell,userpassword=rivendell,inetuserstatus=Active
AgentsAuthModuleTests0.identity12.isMemberOf=no
AgentsAuthModuleTests0.identity12.hasSessionAttributes=false
AgentsAuthModuleTests0.identity13.name=indira
AgentsAuthModuleTests0.identity13.type=User
AgentsAuthModuleTests0.identity13.attributes=sn=indira,cn=indira,userpassword=secret12,inetuserstatus=Active
AgentsAuthModuleTests0.identity13.isMemberOf=no
AgentsAuthModuleTests0.identity13.hasSessionAttributes=false
AgentsAuthModuleTests0.identity13.password=secret12
AgentsAuthModuleTests0.identity14.name=andy
AgentsAuthModuleTests0.identity14.type=User
AgentsAuthModuleTests0.identity14.attributes=sn=andy,cn=andy,userpassword=secret12,inetuserstatus=Active
AgentsAuthModuleTests0.identity14.isMemberOf=no
AgentsAuthModuleTests0.identity14.hasSessionAttributes=false
AgentsAuthModuleTests0.identity14.password=secret12

AgentsAuthModuleTests0.noOfAuthServices=0

AgentsAuthModuleTests0.noOfAuthModules=6
AgentsAuthModuleTests0.AuthModule0.type=ldap
AgentsAuthModuleTests0.AuthModule0.noOfInstances=1
AgentsAuthModuleTests0.AuthModule1.type=membership
AgentsAuthModuleTests0.AuthModule1.noOfInstances=1
AgentsAuthModuleTests0.AuthModule2.type=nt
AgentsAuthModuleTests0.AuthModule2.noOfInstances=1
AgentsAuthModuleTests0.AuthModule3.type=ad
AgentsAuthModuleTests0.AuthModule3.noOfInstances=1
AgentsAuthModuleTests0.AuthModule4.type=jdbc
AgentsAuthModuleTests0.AuthModule4.noOfInstances=1
AgentsAuthModuleTests0.AuthModule5.type=radius
AgentsAuthModuleTests0.AuthModule5.noOfInstances=1


AgentsAuthModuleTests0.noOfPolicies=13

## Policy to verify the LDAP module with realm qualified ###########
AgentsAuthModuleTests0.policy0.name=AuthPolicy00
AgentsAuthModuleTests0.policy0.description=subject test 0
AgentsAuthModuleTests0.policy0.referral=false
AgentsAuthModuleTests0.policy0.active=true

AgentsAuthModuleTests0.policy0.noOfRules=1
AgentsAuthModuleTests0.policy0.rule0.name=rule0
AgentsAuthModuleTests0.policy0.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy0.rule0.resource=agentsGlobal.AuthModuleTestresource0
AgentsAuthModuleTests0.policy0.rule0.noOfActions=2
AgentsAuthModuleTests0.policy0.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy0.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy0.noOfSubjects=1
AgentsAuthModuleTests0.policy0.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy0.subject0.name=AmidUser
AgentsAuthModuleTests0.policy0.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy0.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy0.subject0.att0=Values=AgentsAuthModuleTests0.identity4
AgentsAuthModuleTests0.policy0.subject1.type=AMIdentitySubject

AgentsAuthModuleTests0.policy0.noOfConditions=1
AgentsAuthModuleTests0.policy0.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy0.condition0.name=AuthScheme_LDAP_relamQualified
AgentsAuthModuleTests0.policy0.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy0.condition0.att0=AuthScheme=/:defconfigldap-1

AgentsAuthModuleTests0.policy0.noOfResponseProviders=0

## Policy to verify the LDAP module with realm nonqualified ###############
AgentsAuthModuleTests0.policy1.name=Authpolicy11
AgentsAuthModuleTests0.policy1.description=subject test 0
AgentsAuthModuleTests0.policy1.referral=false
AgentsAuthModuleTests0.policy1.active=true

AgentsAuthModuleTests0.policy1.noOfRules=1
AgentsAuthModuleTests0.policy1.rule0.name=rule0
AgentsAuthModuleTests0.policy1.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy1.rule0.resource=agentsGlobal.AuthModuleTestresource1
AgentsAuthModuleTests0.policy1.rule0.noOfActions=2
AgentsAuthModuleTests0.policy1.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy1.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy1.noOfSubjects=1
AgentsAuthModuleTests0.policy1.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy1.subject0.name=AmidUser
AgentsAuthModuleTests0.policy1.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy1.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy1.subject0.att0=Values=AgentsAuthModuleTests0.identity10

AgentsAuthModuleTests0.policy1.noOfConditions=1
AgentsAuthModuleTests0.policy1.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy1.condition0.name=AuthScheme_LDAP_nonrelamQualified
AgentsAuthModuleTests0.policy1.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy1.condition0.att0=AuthScheme=defconfigldap-1

AgentsAuthModuleTests0.policy1.noOfResponseProviders=0

## Policy to verify the ad module with realm qualified ###############
AgentsAuthModuleTests0.policy2.name=Authpolicy_AdRealmQualified
AgentsAuthModuleTests0.policy2.description=subject test 0
AgentsAuthModuleTests0.policy2.referral=false
AgentsAuthModuleTests0.policy2.active=true

AgentsAuthModuleTests0.policy2.noOfRules=1
AgentsAuthModuleTests0.policy2.rule0.name=rule0
AgentsAuthModuleTests0.policy2.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy2.rule0.resource=agentsGlobal.AuthModuleTestresource2
AgentsAuthModuleTests0.policy2.rule0.noOfActions=2
AgentsAuthModuleTests0.policy2.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy2.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy2.noOfSubjects=1
AgentsAuthModuleTests0.policy2.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy2.subject0.name=AmidUser
AgentsAuthModuleTests0.policy2.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy2.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy2.subject0.att0=Values=AgentsAuthModuleTests0.identity11

AgentsAuthModuleTests0.policy2.noOfConditions=1
AgentsAuthModuleTests0.policy2.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy2.condition0.name=AuthScheme_AD_relamQualified
AgentsAuthModuleTests0.policy2.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy2.condition0.att0=AuthScheme=/:defconfigad-1

AgentsAuthModuleTests0.policy2.noOfResponseProviders=0

## Policy to verify the ad module with realm nonqualified ###############
AgentsAuthModuleTests0.policy3.name=Authpolicy_AdRealmNonQualified
AgentsAuthModuleTests0.policy3.description=subject test 0
AgentsAuthModuleTests0.policy3.referral=false
AgentsAuthModuleTests0.policy3.active=true

AgentsAuthModuleTests0.policy3.noOfRules=1
AgentsAuthModuleTests0.policy3.rule0.name=rule0
AgentsAuthModuleTests0.policy3.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy3.rule0.resource=agentsGlobal.AuthModuleTestresource3
AgentsAuthModuleTests0.policy3.rule0.noOfActions=2
AgentsAuthModuleTests0.policy3.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy3.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy3.noOfSubjects=1
AgentsAuthModuleTests0.policy3.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy3.subject0.name=AmidUser
AgentsAuthModuleTests0.policy3.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy3.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy3.subject0.att0=Values=AgentsAuthModuleTests0.identity11

AgentsAuthModuleTests0.policy3.noOfConditions=1
AgentsAuthModuleTests0.policy3.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy3.condition0.name=AuthScheme_AD_nonrelamQualified
AgentsAuthModuleTests0.policy3.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy3.condition0.att0=AuthScheme=defconfigad-1

AgentsAuthModuleTests0.policy3.noOfResponseProviders=0

## Policy to verify the radius module with realm qualified ###############
AgentsAuthModuleTests0.policy4.name=Authpolicy_radiusRealmQualified
AgentsAuthModuleTests0.policy4.description=subject test 0
AgentsAuthModuleTests0.policy4.referral=false
AgentsAuthModuleTests0.policy4.active=true

AgentsAuthModuleTests0.policy4.noOfRules=1
AgentsAuthModuleTests0.policy4.rule0.name=rule0
AgentsAuthModuleTests0.policy4.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy4.rule0.resource=agentsGlobal.AuthModuleTestresource4
AgentsAuthModuleTests0.policy4.rule0.noOfActions=2
AgentsAuthModuleTests0.policy4.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy4.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy4.noOfSubjects=1
AgentsAuthModuleTests0.policy4.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy4.subject0.name=AmidUser
AgentsAuthModuleTests0.policy4.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy4.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy4.subject0.att0=Values=AgentsAuthModuleTests0.identity12

AgentsAuthModuleTests0.policy4.noOfConditions=1
AgentsAuthModuleTests0.policy4.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy4.condition0.name=AuthScheme_Radius_relamQualified
AgentsAuthModuleTests0.policy4.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy4.condition0.att0=AuthScheme=/:defconfigrad-1

AgentsAuthModuleTests0.policy4.noOfResponseProviders=0

## Policy to verify the radius module with realm nonqualified ###############
AgentsAuthModuleTests0.policy5.name=Authpolicy_radiusRealmNonQualified
AgentsAuthModuleTests0.policy5.description=subject test 0
AgentsAuthModuleTests0.policy5.referral=false
AgentsAuthModuleTests0.policy5.active=true

AgentsAuthModuleTests0.policy5.noOfRules=1
AgentsAuthModuleTests0.policy5.rule0.name=rule0
AgentsAuthModuleTests0.policy5.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy5.rule0.resource=agentsGlobal.AuthModuleTestresource5
AgentsAuthModuleTests0.policy5.rule0.noOfActions=2
AgentsAuthModuleTests0.policy5.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy5.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy5.noOfSubjects=1
AgentsAuthModuleTests0.policy5.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy5.subject0.name=AmidUser
AgentsAuthModuleTests0.policy5.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy5.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy5.subject0.att0=Values=AgentsAuthModuleTests0.identity12

AgentsAuthModuleTests0.policy5.noOfConditions=1
AgentsAuthModuleTests0.policy5.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy5.condition0.name=AuthScheme_Radius_nonrelamQualified
AgentsAuthModuleTests0.policy5.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy5.condition0.att0=AuthScheme=defconfigrad-1

AgentsAuthModuleTests0.policy5.noOfResponseProviders=0

## Policy to verify the membership module with realm qualified ###############
AgentsAuthModuleTests0.policy6.name=Authpolicy_membershipRealmQualified
AgentsAuthModuleTests0.policy6.description=subject test 0
AgentsAuthModuleTests0.policy6.referral=false
AgentsAuthModuleTests0.policy6.active=true

AgentsAuthModuleTests0.policy6.noOfRules=1
AgentsAuthModuleTests0.policy6.rule0.name=rule0
AgentsAuthModuleTests0.policy6.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy6.rule0.resource=agentsGlobal.AuthModuleTestresource6
AgentsAuthModuleTests0.policy6.rule0.noOfActions=2
AgentsAuthModuleTests0.policy6.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy6.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy6.noOfSubjects=1
AgentsAuthModuleTests0.policy6.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy6.subject0.name=AmidUser
AgentsAuthModuleTests0.policy6.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy6.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy6.subject0.att0=Values=AgentsAuthModuleTests0.identity7

AgentsAuthModuleTests0.policy6.noOfConditions=1
AgentsAuthModuleTests0.policy6.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy6.condition0.name=AuthScheme_mem_relamQualified
AgentsAuthModuleTests0.policy6.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy6.condition0.att0=AuthScheme=/:defconfigmem-1

AgentsAuthModuleTests0.policy6.noOfResponseProviders=0

## Policy to verify the membership module with realm nonqualified ###############
AgentsAuthModuleTests0.policy7.name=Authpolicy_membershipRealmNonQualified
AgentsAuthModuleTests0.policy7.description=subject test 0
AgentsAuthModuleTests0.policy7.referral=false
AgentsAuthModuleTests0.policy7.active=true

AgentsAuthModuleTests0.policy7.noOfRules=1
AgentsAuthModuleTests0.policy7.rule0.name=rule0
AgentsAuthModuleTests0.policy7.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy7.rule0.resource=agentsGlobal.AuthModuleTestresource7
AgentsAuthModuleTests0.policy7.rule0.noOfActions=2
AgentsAuthModuleTests0.policy7.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy7.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy7.noOfSubjects=1
AgentsAuthModuleTests0.policy7.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy7.subject0.name=AmidUser
AgentsAuthModuleTests0.policy7.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy7.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy7.subject0.att0=Values=AgentsAuthModuleTests0.identity7

AgentsAuthModuleTests0.policy7.noOfConditions=1
AgentsAuthModuleTests0.policy7.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy7.condition0.name=AuthScheme_mem_nonrelamQualified
AgentsAuthModuleTests0.policy7.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy7.condition0.att0=AuthScheme=defconfigmem-1

AgentsAuthModuleTests0.policy7.noOfResponseProviders=0

## Policy to verify the Datastore module with realm nonqualified ###############
AgentsAuthModuleTests0.policy8.name=Authpolicy_DatastoreRealmQualified
AgentsAuthModuleTests0.policy8.description=subject test 0
AgentsAuthModuleTests0.policy8.referral=false
AgentsAuthModuleTests0.policy8.active=true

AgentsAuthModuleTests0.policy8.noOfRules=1
AgentsAuthModuleTests0.policy8.rule0.name=rule0
AgentsAuthModuleTests0.policy8.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy8.rule0.resource=agentsGlobal.AuthModuleTestresource8
AgentsAuthModuleTests0.policy8.rule0.noOfActions=2
AgentsAuthModuleTests0.policy8.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy8.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy8.noOfSubjects=1
AgentsAuthModuleTests0.policy8.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy8.subject0.name=AmidUser
AgentsAuthModuleTests0.policy8.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy8.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy8.subject0.att0=Values=AgentsAuthModuleTests0.identity9

AgentsAuthModuleTests0.policy8.noOfConditions=1
AgentsAuthModuleTests0.policy8.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy8.condition0.name=AuthScheme_DatastorerelamQualified
AgentsAuthModuleTests0.policy8.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy8.condition0.att0=AuthScheme=/:DataStore

AgentsAuthModuleTests0.policy8.noOfResponseProviders=0

## Policy to verify the NT module with realm nonqualified ###############
AgentsAuthModuleTests0.policy9.name=Authpolicy_NT_RealmQualified
AgentsAuthModuleTests0.policy9.description=subject test 0
AgentsAuthModuleTests0.policy9.referral=false
AgentsAuthModuleTests0.policy9.active=true

AgentsAuthModuleTests0.policy9.noOfRules=1
AgentsAuthModuleTests0.policy9.rule0.name=rule0
AgentsAuthModuleTests0.policy9.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy9.rule0.resource=agentsGlobal.AuthModuleTestresource9
AgentsAuthModuleTests0.policy9.rule0.noOfActions=2
AgentsAuthModuleTests0.policy9.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy9.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy9.noOfSubjects=1
AgentsAuthModuleTests0.policy9.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy9.subject0.name=AmidUser
AgentsAuthModuleTests0.policy9.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy9.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy9.subject0.att0=Values=AgentsAuthModuleTests0.identity14

AgentsAuthModuleTests0.policy9.noOfConditions=1
AgentsAuthModuleTests0.policy9.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy9.condition0.name=AuthScheme_DatastorerelamQualified
AgentsAuthModuleTests0.policy9.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy9.condition0.att0=AuthScheme=/:defconfignt-1

AgentsAuthModuleTests0.policy9.noOfResponseProviders=0


## Policy to verify the NT module with realm qualified ###############
AgentsAuthModuleTests0.policy10.name=Authpolicy_NT_NONRealmQualified
AgentsAuthModuleTests0.policy10.description=subject test 0
AgentsAuthModuleTests0.policy10.referral=false
AgentsAuthModuleTests0.policy10.active=true

AgentsAuthModuleTests0.policy10.noOfRules=1
AgentsAuthModuleTests0.policy10.rule0.name=rule0
AgentsAuthModuleTests0.policy10.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy10.rule0.resource=agentsGlobal.AuthModuleTestresource10
AgentsAuthModuleTests0.policy10.rule0.noOfActions=2
AgentsAuthModuleTests0.policy10.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy10.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy10.noOfSubjects=1
AgentsAuthModuleTests0.policy10.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy10.subject0.name=AmidUser
AgentsAuthModuleTests0.policy10.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy10.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy10.subject0.att0=Values=AgentsAuthModuleTests0.identity14

AgentsAuthModuleTests0.policy10.noOfConditions=1
AgentsAuthModuleTests0.policy10.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy10.condition0.name=AuthScheme_DatastorerelamQualified
AgentsAuthModuleTests0.policy10.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy10.condition0.att0=AuthScheme=defconfignt-1

AgentsAuthModuleTests0.policy10.noOfResponseProviders=0


## Policy to verify the JDBC module with realm qualified ###############
AgentsAuthModuleTests0.policy11.name=Authpolicy_JDBC_RealmQualified
AgentsAuthModuleTests0.policy11.description=subject test 0
AgentsAuthModuleTests0.policy11.referral=false
AgentsAuthModuleTests0.policy11.active=true

AgentsAuthModuleTests0.policy11.noOfRules=1
AgentsAuthModuleTests0.policy11.rule0.name=rule0
AgentsAuthModuleTests0.policy11.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy11.rule0.resource=agentsGlobal.AuthModuleTestresource11
AgentsAuthModuleTests0.policy11.rule0.noOfActions=2
AgentsAuthModuleTests0.policy11.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy11.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy11.noOfSubjects=1
AgentsAuthModuleTests0.policy11.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy11.subject0.name=AmidUser
AgentsAuthModuleTests0.policy11.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy11.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy11.subject0.att0=Values=AgentsAuthModuleTests0.identity13

AgentsAuthModuleTests0.policy11.noOfConditions=1
AgentsAuthModuleTests0.policy11.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy11.condition0.name=AuthScheme_DatastorerelamQualified
AgentsAuthModuleTests0.policy11.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy11.condition0.att0=AuthScheme=/:defconfigjdbc-1

AgentsAuthModuleTests0.policy11.noOfResponseProviders=0


## Policy to verify the JDBC module with realm nonqualified ###############
AgentsAuthModuleTests0.policy12.name=Authpolicy_JDBC_RealmNonQualified
AgentsAuthModuleTests0.policy12.description=subject test 0
AgentsAuthModuleTests0.policy12.referral=false
AgentsAuthModuleTests0.policy12.active=true

AgentsAuthModuleTests0.policy12.noOfRules=1
AgentsAuthModuleTests0.policy12.rule0.name=rule0
AgentsAuthModuleTests0.policy12.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests0.policy12.rule0.resource=agentsGlobal.AuthModuleTestresource12
AgentsAuthModuleTests0.policy12.rule0.noOfActions=2
AgentsAuthModuleTests0.policy12.rule0.action0=GET=allow
AgentsAuthModuleTests0.policy12.rule0.action1=POST=allow

AgentsAuthModuleTests0.policy12.noOfSubjects=1
AgentsAuthModuleTests0.policy12.subject0.type=AMIdentitySubject
AgentsAuthModuleTests0.policy12.subject0.name=AmidUser
AgentsAuthModuleTests0.policy12.subject0.includeType=inclusive
AgentsAuthModuleTests0.policy12.subject0.noOfAttributes=1
AgentsAuthModuleTests0.policy12.subject0.att0=Values=AgentsAuthModuleTests0.identity13

AgentsAuthModuleTests0.policy12.noOfConditions=1
AgentsAuthModuleTests0.policy12.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests0.policy12.condition0.name=AuthScheme_JDBCrelamQualified
AgentsAuthModuleTests0.policy12.condition0.noOfAttributes=1
AgentsAuthModuleTests0.policy12.condition0.att0=AuthScheme=defconfigjdbc-1

AgentsAuthModuleTests0.policy12.noOfResponseProviders=0


############ Test for policy 0 ###############
AgentsAuthModuleTests0.evaluation0.resource=agentsGlobal.AuthModuleTestresource0
AgentsAuthModuleTests0.evaluation0.username=AgentsAuthModuleTests0.identity4.name
AgentsAuthModuleTests0.evaluation0.password=AgentsAuthModuleTests0.identity4.name
AgentsAuthModuleTests0.evaluation0.noOfModules=2
AgentsAuthModuleTests0.evaluation0.module0.type=DataStore
AgentsAuthModuleTests0.evaluation0.module1.type=LDAP
AgentsAuthModuleTests0.evaluation0.expectedResult=AgentsAuthModuleTests0_Policy0_Resource
AgentsAuthModuleTests0.evaluation0.description=Access should be allowed as per policy condition definition with request AuthScheme_LDAP_relamQualified

############ Test for policy 1 ###############
AgentsAuthModuleTests0.evaluation1.resource=agentsGlobal.AuthModuleTestresource1
AgentsAuthModuleTests0.evaluation1.username=AgentsAuthModuleTests0.identity10.name
AgentsAuthModuleTests0.evaluation1.password=AgentsAuthModuleTests0.identity10.name
AgentsAuthModuleTests0.evaluation1.noOfModules=2
AgentsAuthModuleTests0.evaluation1.module0.type=DataStore
AgentsAuthModuleTests0.evaluation1.module1.type=LDAP
AgentsAuthModuleTests0.evaluation1.expectedResult=AgentsAuthModuleTests0_Policy1_Resource
AgentsAuthModuleTests0.evaluation1.description=Access should be allowed as per policy condition definition with request AuthScheme_LDAP_nonrelamQualified

############ Test for policy 2 ###############
AgentsAuthModuleTests0.evaluation2.resource=agentsGlobal.AuthModuleTestresource2
AgentsAuthModuleTests0.evaluation2.username=AgentsAuthModuleTests0.identity11.name
AgentsAuthModuleTests0.evaluation2.password=AgentsAuthModuleTests0.identity11.password
AgentsAuthModuleTests0.evaluation2.noOfModules=2
AgentsAuthModuleTests0.evaluation2.module0.type=DataStore
AgentsAuthModuleTests0.evaluation2.module1.type=Active Directory
AgentsAuthModuleTests0.evaluation2.expectedResult=AgentsAuthModuleTests0_Policy2_Resource
AgentsAuthModuleTests0.evaluation2.description=Access should be allowed as per policy condition definition with request AuthScheme_ad_relamQualified

############ Test for policy 3 ###############
AgentsAuthModuleTests0.evaluation3.resource=agentsGlobal.AuthModuleTestresource3
AgentsAuthModuleTests0.evaluation3.username=AgentsAuthModuleTests0.identity11.name
AgentsAuthModuleTests0.evaluation3.password=AgentsAuthModuleTests0.identity11.password
AgentsAuthModuleTests0.evaluation3.noOfModules=2
AgentsAuthModuleTests0.evaluation3.module0.type=DataStore
AgentsAuthModuleTests0.evaluation3.module1.type=Active Directory
AgentsAuthModuleTests0.evaluation3.expectedResult=AgentsAuthModuleTests0_Policy3_Resource
AgentsAuthModuleTests0.evaluation3.description=Access should be allowed as per policy condition definition with request AuthScheme_ad_relamNOnQualified

############ Test for policy 4 ###############
AgentsAuthModuleTests0.evaluation4.resource=agentsGlobal.AuthModuleTestresource4
AgentsAuthModuleTests0.evaluation4.username=AgentsAuthModuleTests0.identity12.name
AgentsAuthModuleTests0.evaluation4.password=AgentsAuthModuleTests0.identity12.name
AgentsAuthModuleTests0.evaluation4.noOfModules=2
AgentsAuthModuleTests0.evaluation4.module0.type=DataStore
AgentsAuthModuleTests0.evaluation4.module1.type=Radius
AgentsAuthModuleTests0.evaluation4.expectedResult=AgentsAuthModuleTests0_Policy4_Resource
AgentsAuthModuleTests0.evaluation4.description=Access should be allowed as per policy condition definition with request AuthScheme_radius_relamQualified

############ Test for policy 5 ###############
AgentsAuthModuleTests0.evaluation5.resource=agentsGlobal.AuthModuleTestresource5
AgentsAuthModuleTests0.evaluation5.username=AgentsAuthModuleTests0.identity12.name
AgentsAuthModuleTests0.evaluation5.password=AgentsAuthModuleTests0.identity12.name
AgentsAuthModuleTests0.evaluation5.noOfModules=2
AgentsAuthModuleTests0.evaluation5.module0.type=DataStore
AgentsAuthModuleTests0.evaluation5.module1.type=Radius
AgentsAuthModuleTests0.evaluation5.expectedResult=AgentsAuthModuleTests0_Policy5_Resource
AgentsAuthModuleTests0.evaluation5.description=Access should be allowed as per policy condition definition with request AuthScheme_radius_relamNOnQualified

############ Test for policy 6 ###############
AgentsAuthModuleTests0.evaluation6.resource=agentsGlobal.AuthModuleTestresource6
AgentsAuthModuleTests0.evaluation6.username=AgentsAuthModuleTests0.identity7.name
AgentsAuthModuleTests0.evaluation6.password=AgentsAuthModuleTests0.identity7.name
AgentsAuthModuleTests0.evaluation6.noOfModules=2
AgentsAuthModuleTests0.evaluation6.module0.type=DataStore
AgentsAuthModuleTests0.evaluation6.module1.type=Membership
AgentsAuthModuleTests0.evaluation6.expectedResult=AgentsAuthModuleTests0_Policy6_Resource
AgentsAuthModuleTests0.evaluation6.description=Access should be allowed as per policy condition definition with request AuthScheme_membership_relamQualified

############ Test for policy 7 ###############
AgentsAuthModuleTests0.evaluation7.resource=agentsGlobal.AuthModuleTestresource7
AgentsAuthModuleTests0.evaluation7.username=AgentsAuthModuleTests0.identity7.name
AgentsAuthModuleTests0.evaluation7.password=AgentsAuthModuleTests0.identity7.name
AgentsAuthModuleTests0.evaluation7.noOfModules=2
AgentsAuthModuleTests0.evaluation7.module0.type=DataStore
AgentsAuthModuleTests0.evaluation7.module1.type=Membership
AgentsAuthModuleTests0.evaluation7.expectedResult=AgentsAuthModuleTests0_Policy7_Resource
AgentsAuthModuleTests0.evaluation7.description=Access should be allowed as per policy condition definition with request AuthScheme_membership_relamQualified

############ Test for policy 8 ###############
AgentsAuthModuleTests0.evaluation8.resource=agentsGlobal.AuthModuleTestresource8
AgentsAuthModuleTests0.evaluation8.username=AgentsAuthModuleTests0.identity9.name
AgentsAuthModuleTests0.evaluation8.password=AgentsAuthModuleTests0.identity9.name
AgentsAuthModuleTests0.evaluation8.noOfModules=1
AgentsAuthModuleTests0.evaluation8.module0.type=DataStore
AgentsAuthModuleTests0.evaluation8.expectedResult=AgentsAuthModuleTests0_Policy8_Resource
AgentsAuthModuleTests0.evaluation8.description=Access should be allowed as per policy condition definition with request AuthScheme_Datastore_relamQualified

############ Test for policy 9 ###############
AgentsAuthModuleTests0.evaluation9.resource=agentsGlobal.AuthModuleTestresource9
AgentsAuthModuleTests0.evaluation9.username=AgentsAuthModuleTests0.identity14.name
AgentsAuthModuleTests0.evaluation9.password=AgentsAuthModuleTests0.identity14.password
AgentsAuthModuleTests0.evaluation9.noOfModules=2
AgentsAuthModuleTests0.evaluation9.module0.type=DataStore
AgentsAuthModuleTests0.evaluation9.module0.type=NT
AgentsAuthModuleTests0.evaluation9.expectedResult=AgentsAuthModuleTests0_Policy9_Resource
AgentsAuthModuleTests0.evaluation9.description=Access should be allowed as per policy condition definition with request AuthScheme_NT_relamQualified

############ Test for policy 10 ###############
AgentsAuthModuleTests0.evaluation10.resource=agentsGlobal.AuthModuleTestresource10
AgentsAuthModuleTests0.evaluation10.username=AgentsAuthModuleTests0.identity14.name
AgentsAuthModuleTests0.evaluation10.password=AgentsAuthModuleTests0.identity14.password
AgentsAuthModuleTests0.evaluation10.noOfModules=2
AgentsAuthModuleTests0.evaluation10.module0.type=DataStore
AgentsAuthModuleTests0.evaluation10.module0.type=NT
AgentsAuthModuleTests0.evaluation10.expectedResult=AgentsAuthModuleTests0_Policy10_Resource
AgentsAuthModuleTests0.evaluation10.description=Access should be allowed as per policy condition definition with request AuthScheme_NT_realmNonQualified

############ Test for policy 11 ###############
AgentsAuthModuleTests0.evaluation11.resource=agentsGlobal.AuthModuleTestresource11
AgentsAuthModuleTests0.evaluation11.username=AgentsAuthModuleTests0.identity13.name
AgentsAuthModuleTests0.evaluation11.password=AgentsAuthModuleTests0.identity13.password
AgentsAuthModuleTests0.evaluation11.noOfModules=2
AgentsAuthModuleTests0.evaluation11.module0.type=DataStore
AgentsAuthModuleTests0.evaluation11.module0.type=JDBC
AgentsAuthModuleTests0.evaluation11.expectedResult=AgentsAuthModuleTests0_Policy11_Resource
AgentsAuthModuleTests0.evaluation11.description=Access should be allowed as per policy condition definition with request AuthScheme_JDBC_relamQualified

############ Test for policy 12 ###############
AgentsAuthModuleTests0.evaluation12.resource=agentsGlobal.AuthModuleTestresource12
AgentsAuthModuleTests0.evaluation12.username=AgentsAuthModuleTests0.identity13.name
AgentsAuthModuleTests0.evaluation12.password=AgentsAuthModuleTests0.identity13.password
AgentsAuthModuleTests0.evaluation12.noOfModules=2
AgentsAuthModuleTests0.evaluation12.module0.type=DataStore
AgentsAuthModuleTests0.evaluation12.module0.type=JDBC
AgentsAuthModuleTests0.evaluation12.expectedResult=AgentsAuthModuleTests0_Policy12_Resource
AgentsAuthModuleTests0.evaluation12.description=Access should be allowed as per policy condition definition with request AuthScheme_JDBC_relamNonQualified

##################################################################################################################
# ATTRIBUTES FOR POLICY TEST 2== Realm qualified and non qualified authentication conditions with service based
# EXECUTION_MODES : "ldapv3", "ldapv3_sec", "s1ds", "s1ds_sec", "ad", "ad_sec", "amsdk", "amsdk_sec", "jdbc", "jdbc_sec"
##################################################################################################################
AgentsAuthModuleTests1.noOfIdentities=15

AgentsAuthModuleTests1.identity0.name=group1
AgentsAuthModuleTests1.identity0.type=Group
AgentsAuthModuleTests1.identity0.attributes=
AgentsAuthModuleTests1.identity0.isMemberOf=no
AgentsAuthModuleTests1.identity0.hasSessionAttributes=false
AgentsAuthModuleTests1.identity1.name=group2
AgentsAuthModuleTests1.identity1.type=Group
AgentsAuthModuleTests1.identity1.attributes=
AgentsAuthModuleTests1.identity1.isMemberOf=no
AgentsAuthModuleTests1.identity1.hasSessionAttributes=false
AgentsAuthModuleTests1.identity2.name=role1
AgentsAuthModuleTests1.identity2.type=Role
AgentsAuthModuleTests1.identity2.attributes=
AgentsAuthModuleTests1.identity2.isMemberOf=no
AgentsAuthModuleTests1.identity2.hasSessionAttributes=false
AgentsAuthModuleTests1.identity3.name=role2
AgentsAuthModuleTests1.identity3.type=Role
AgentsAuthModuleTests1.identity3.attributes=
AgentsAuthModuleTests1.identity3.isMemberOf=no
AgentsAuthModuleTests1.identity4.name=user0
AgentsAuthModuleTests1.identity4.type=User
AgentsAuthModuleTests1.identity4.attributes=sn=user0,cn=user0,userpassword=user0,inetuserstatus=Active
AgentsAuthModuleTests1.identity4.isMemberOf=no
AgentsAuthModuleTests1.identity4.hasSessionAttributes=false
AgentsAuthModuleTests1.identity5.name=roleuser1
AgentsAuthModuleTests1.identity5.type=User
AgentsAuthModuleTests1.identity5.attributes=sn=roleuser1,cn=roleuser1,userpassword=roleuser1,inetuserstatus=Active
AgentsAuthModuleTests1.identity5.isMemberOf=yes
AgentsAuthModuleTests1.identity5.memberOf=AgentsAuthModuleTests1.identity2
AgentsAuthModuleTests1.identity5.hasSessionAttributes=false
AgentsAuthModuleTests1.identity6.name=groupuser1
AgentsAuthModuleTests1.identity6.type=User
AgentsAuthModuleTests1.identity6.attributes=sn=groupuser1,cn=groupuser1,userpassword=groupuser1,inetuserstatus=Active
AgentsAuthModuleTests1.identity6.isMemberOf=yes
AgentsAuthModuleTests1.identity6.memberOf=AgentsAuthModuleTests1.identity0
AgentsAuthModuleTests1.identity6.hasSessionAttributes=false
AgentsAuthModuleTests1.identity7.name=user1
AgentsAuthModuleTests1.identity7.type=User
AgentsAuthModuleTests1.identity7.attributes=sn=user1,cn=user1,userpassword=user1,inetuserstatus=Active
AgentsAuthModuleTests1.identity7.isMemberOf=no
AgentsAuthModuleTests1.identity7.hasSessionAttributes=false
AgentsAuthModuleTests1.identity8.name=groupuser2
AgentsAuthModuleTests1.identity8.type=User
AgentsAuthModuleTests1.identity8.attributes=sn=groupuser2,cn=groupuser2,userpassword=groupuser2,inetuserstatus=Active
AgentsAuthModuleTests1.identity8.isMemberOf=yes
AgentsAuthModuleTests1.identity8.memberOf=AgentsAuthModuleTests1.identity1
AgentsAuthModuleTests1.identity8.hasSessionAttributes=false
AgentsAuthModuleTests1.identity9.name=roleuser2
AgentsAuthModuleTests1.identity9.type=User
AgentsAuthModuleTests1.identity9.attributes=sn=roleuser2,cn=roleuser2,userpassword=roleuser2,inetuserstatus=Active
AgentsAuthModuleTests1.identity9.isMemberOf=yes
AgentsAuthModuleTests1.identity9.memberOf=AgentsAuthModuleTests1.identity3
AgentsAuthModuleTests1.identity9.hasSessionAttributes=false
AgentsAuthModuleTests1.identity10.name=user2
AgentsAuthModuleTests1.identity10.type=User
AgentsAuthModuleTests1.identity10.attributes=sn=user2,cn=user2,userpassword=user2,inetuserstatus=Active
AgentsAuthModuleTests1.identity10.isMemberOf=no
AgentsAuthModuleTests1.identity10.hasSessionAttributes=false
AgentsAuthModuleTests1.identity11.name=administrator
AgentsAuthModuleTests1.identity11.type=User
AgentsAuthModuleTests1.identity11.attributes=sn=administrator,cn=administrator,userpassword=secret12,inetuserstatus=Active
AgentsAuthModuleTests1.identity11.isMemberOf=no
AgentsAuthModuleTests1.identity11.hasSessionAttributes=false
AgentsAuthModuleTests1.identity11.password=secret12
AgentsAuthModuleTests1.identity12.name=rivendell
AgentsAuthModuleTests1.identity12.type=User
AgentsAuthModuleTests1.identity12.attributes=sn=rivendell,cn=rivendell,userpassword=rivendell,inetuserstatus=Active
AgentsAuthModuleTests1.identity12.isMemberOf=no
AgentsAuthModuleTests1.identity12.hasSessionAttributes=false
AgentsAuthModuleTests1.identity13.name=indira
AgentsAuthModuleTests1.identity13.type=User
AgentsAuthModuleTests1.identity13.attributes=sn=indira,cn=indira,userpassword=secret12,inetuserstatus=Active
AgentsAuthModuleTests1.identity13.isMemberOf=no
AgentsAuthModuleTests1.identity13.hasSessionAttributes=false
AgentsAuthModuleTests1.identity13.password=secret12
AgentsAuthModuleTests1.identity14.name=andy
AgentsAuthModuleTests1.identity14.type=User
AgentsAuthModuleTests1.identity14.attributes=sn=andy,cn=andy,userpassword=secret12,inetuserstatus=Active
AgentsAuthModuleTests1.identity14.isMemberOf=no
AgentsAuthModuleTests1.identity14.hasSessionAttributes=false
AgentsAuthModuleTests1.identity14.password=secret12

AgentsAuthModuleTests1.noOfAuthServices=1
AgentsAuthModuleTests1.AuthService0.name=ad_ldap_withdatastore
AgentsAuthModuleTests1.AuthService0.description=verify the chain with policy
AgentsAuthModuleTests1.AuthService0.instances=defconfigad-1,REQUIRED|defconfigldap-1,REQUIRED


AgentsAuthModuleTests1.noOfAuthModules=6
AgentsAuthModuleTests1.AuthModule0.type=ldap
AgentsAuthModuleTests1.AuthModule0.noOfInstances=1
AgentsAuthModuleTests1.AuthModule1.type=membership
AgentsAuthModuleTests1.AuthModule1.noOfInstances=1
AgentsAuthModuleTests1.AuthModule2.type=nt
AgentsAuthModuleTests1.AuthModule2.noOfInstances=1
AgentsAuthModuleTests1.AuthModule3.type=ad
AgentsAuthModuleTests1.AuthModule3.noOfInstances=1
AgentsAuthModuleTests1.AuthModule4.type=jdbc
AgentsAuthModuleTests1.AuthModule4.noOfInstances=1
AgentsAuthModuleTests1.AuthModule5.type=radius
AgentsAuthModuleTests1.AuthModule5.noOfInstances=1


AgentsAuthModuleTests1.noOfPolicies=1

## Policy to verify the LDAP module with realm qualified ###########
AgentsAuthModuleTests1.policy0.name=AuthSchemeTestAD_LDAP_Policy
AgentsAuthModuleTests1.policy0.description=subject test 0
AgentsAuthModuleTests1.policy0.referral=false
AgentsAuthModuleTests1.policy0.active=true

AgentsAuthModuleTests1.policy0.noOfRules=1
AgentsAuthModuleTests1.policy0.rule0.name=rule0
AgentsAuthModuleTests1.policy0.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy0.rule0.resource=agentsGlobal.AuthModuleTestresource100
AgentsAuthModuleTests1.policy0.rule0.noOfActions=2
AgentsAuthModuleTests1.policy0.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy0.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy0.noOfSubjects=1
AgentsAuthModuleTests1.policy0.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy0.subject0.name=AmidUser
AgentsAuthModuleTests1.policy0.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy0.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy0.subject0.att0=Values=AgentsAuthModuleTests1.identity11
AgentsAuthModuleTests1.policy0.subject1.type=AMIdentitySubject

AgentsAuthModuleTests1.policy0.noOfConditions=1
AgentsAuthModuleTests1.policy0.condition0.type=AuthenticateToServiceCondition
AgentsAuthModuleTests1.policy0.condition0.name=AuthServiceRealmNonRealmQualified
AgentsAuthModuleTests1.policy0.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy0.condition0.att0=AuthenticateToService=/:ad_ldap_withdatastore

AgentsAuthModuleTests1.policy0.noOfResponseProviders=0

## Policy to verify the LDAP module with realm nonqualified ###############
AgentsAuthModuleTests1.policy1.name=Authpolicy11
AgentsAuthModuleTests1.policy1.description=subject test 0
AgentsAuthModuleTests1.policy1.referral=false
AgentsAuthModuleTests1.policy1.active=true

AgentsAuthModuleTests1.policy1.noOfRules=1
AgentsAuthModuleTests1.policy1.rule0.name=rule0
AgentsAuthModuleTests1.policy1.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy1.rule0.resource=agentsGlobal.resource1
AgentsAuthModuleTests1.policy1.rule0.noOfActions=2
AgentsAuthModuleTests1.policy1.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy1.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy1.noOfSubjects=1
AgentsAuthModuleTests1.policy1.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy1.subject0.name=AmidUser
AgentsAuthModuleTests1.policy1.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy1.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy1.subject0.att0=Values=AgentsAuthModuleTests1.identity10

AgentsAuthModuleTests1.policy1.noOfConditions=1
AgentsAuthModuleTests1.policy1.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy1.condition0.name=AuthScheme_LDAP_nonrelamQualified
AgentsAuthModuleTests1.policy1.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy1.condition0.att0=AuthScheme=defconfigldap-1

AgentsAuthModuleTests1.policy1.noOfResponseProviders=0

## Policy to verify the ad module with realm qualified ###############
AgentsAuthModuleTests1.policy2.name=Authpolicy_AdRealmQualified
AgentsAuthModuleTests1.policy2.description=subject test 0
AgentsAuthModuleTests1.policy2.referral=false
AgentsAuthModuleTests1.policy2.active=true

AgentsAuthModuleTests1.policy2.noOfRules=1
AgentsAuthModuleTests1.policy2.rule0.name=rule0
AgentsAuthModuleTests1.policy2.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy2.rule0.resource=agentsGlobal.resource2
AgentsAuthModuleTests1.policy2.rule0.noOfActions=2
AgentsAuthModuleTests1.policy2.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy2.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy2.noOfSubjects=1
AgentsAuthModuleTests1.policy2.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy2.subject0.name=AmidUser
AgentsAuthModuleTests1.policy2.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy2.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy2.subject0.att0=Values=AgentsAuthModuleTests1.identity11

AgentsAuthModuleTests1.policy2.noOfConditions=1
AgentsAuthModuleTests1.policy2.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy2.condition0.name=AuthScheme_AD_relamQualified
AgentsAuthModuleTests1.policy2.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy2.condition0.att0=AuthScheme=/:defconfigad-1

AgentsAuthModuleTests1.policy2.noOfResponseProviders=0

## Policy to verify the ad module with realm nonqualified ###############
AgentsAuthModuleTests1.policy3.name=Authpolicy_AdRealmNonQualified
AgentsAuthModuleTests1.policy3.description=subject test 0
AgentsAuthModuleTests1.policy3.referral=false
AgentsAuthModuleTests1.policy3.active=true

AgentsAuthModuleTests1.policy3.noOfRules=1
AgentsAuthModuleTests1.policy3.rule0.name=rule0
AgentsAuthModuleTests1.policy3.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy3.rule0.resource=agentsGlobal.resource3
AgentsAuthModuleTests1.policy3.rule0.noOfActions=2
AgentsAuthModuleTests1.policy3.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy3.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy3.noOfSubjects=1
AgentsAuthModuleTests1.policy3.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy3.subject0.name=AmidUser
AgentsAuthModuleTests1.policy3.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy3.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy3.subject0.att0=Values=AgentsAuthModuleTests1.identity11

AgentsAuthModuleTests1.policy3.noOfConditions=1
AgentsAuthModuleTests1.policy3.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy3.condition0.name=AuthScheme_AD_nonrelamQualified
AgentsAuthModuleTests1.policy3.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy3.condition0.att0=AuthScheme=defconfigad-1

AgentsAuthModuleTests1.policy3.noOfResponseProviders=0

## Policy to verify the radius module with realm qualified ###############
AgentsAuthModuleTests1.policy4.name=Authpolicy_radiusRealmQualified
AgentsAuthModuleTests1.policy4.description=subject test 0
AgentsAuthModuleTests1.policy4.referral=false
AgentsAuthModuleTests1.policy4.active=true

AgentsAuthModuleTests1.policy4.noOfRules=1
AgentsAuthModuleTests1.policy4.rule0.name=rule0
AgentsAuthModuleTests1.policy4.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy4.rule0.resource=agentsGlobal.resource4
AgentsAuthModuleTests1.policy4.rule0.noOfActions=2
AgentsAuthModuleTests1.policy4.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy4.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy4.noOfSubjects=1
AgentsAuthModuleTests1.policy4.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy4.subject0.name=AmidUser
AgentsAuthModuleTests1.policy4.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy4.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy4.subject0.att0=Values=AgentsAuthModuleTests1.identity12

AgentsAuthModuleTests1.policy4.noOfConditions=1
AgentsAuthModuleTests1.policy4.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy4.condition0.name=AuthScheme_Radius_relamQualified
AgentsAuthModuleTests1.policy4.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy4.condition0.att0=AuthScheme=/:defconfigrad-1

AgentsAuthModuleTests1.policy4.noOfResponseProviders=0

## Policy to verify the radius module with realm nonqualified ###############
AgentsAuthModuleTests1.policy5.name=Authpolicy_radiusRealmNonQualified
AgentsAuthModuleTests1.policy5.description=subject test 0
AgentsAuthModuleTests1.policy5.referral=false
AgentsAuthModuleTests1.policy5.active=true

AgentsAuthModuleTests1.policy5.noOfRules=1
AgentsAuthModuleTests1.policy5.rule0.name=rule0
AgentsAuthModuleTests1.policy5.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy5.rule0.resource=agentsGlobal.resource5
AgentsAuthModuleTests1.policy5.rule0.noOfActions=2
AgentsAuthModuleTests1.policy5.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy5.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy5.noOfSubjects=1
AgentsAuthModuleTests1.policy5.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy5.subject0.name=AmidUser
AgentsAuthModuleTests1.policy5.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy5.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy5.subject0.att0=Values=AgentsAuthModuleTests1.identity12

AgentsAuthModuleTests1.policy5.noOfConditions=1
AgentsAuthModuleTests1.policy5.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy5.condition0.name=AuthScheme_Radius_nonrelamQualified
AgentsAuthModuleTests1.policy5.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy5.condition0.att0=AuthScheme=defconfigrad-1

AgentsAuthModuleTests1.policy5.noOfResponseProviders=0

## Policy to verify the membership module with realm qualified ###############
AgentsAuthModuleTests1.policy6.name=Authpolicy_membershipRealmQualified
AgentsAuthModuleTests1.policy6.description=subject test 0
AgentsAuthModuleTests1.policy6.referral=false
AgentsAuthModuleTests1.policy6.active=true

AgentsAuthModuleTests1.policy6.noOfRules=1
AgentsAuthModuleTests1.policy6.rule0.name=rule0
AgentsAuthModuleTests1.policy6.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy6.rule0.resource=agentsGlobal.resource6
AgentsAuthModuleTests1.policy6.rule0.noOfActions=2
AgentsAuthModuleTests1.policy6.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy6.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy6.noOfSubjects=1
AgentsAuthModuleTests1.policy6.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy6.subject0.name=AmidUser
AgentsAuthModuleTests1.policy6.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy6.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy6.subject0.att0=Values=AgentsAuthModuleTests1.identity7

AgentsAuthModuleTests1.policy6.noOfConditions=1
AgentsAuthModuleTests1.policy6.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy6.condition0.name=AuthScheme_mem_relamQualified
AgentsAuthModuleTests1.policy6.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy6.condition0.att0=AuthScheme=/:defconfigmem-1

AgentsAuthModuleTests1.policy6.noOfResponseProviders=0

## Policy to verify the membership module with realm nonqualified ###############
AgentsAuthModuleTests1.policy7.name=Authpolicy_membershipRealmNonQualified
AgentsAuthModuleTests1.policy7.description=subject test 0
AgentsAuthModuleTests1.policy7.referral=false
AgentsAuthModuleTests1.policy7.active=true

AgentsAuthModuleTests1.policy7.noOfRules=1
AgentsAuthModuleTests1.policy7.rule0.name=rule0
AgentsAuthModuleTests1.policy7.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy7.rule0.resource=agentsGlobal.resource7
AgentsAuthModuleTests1.policy7.rule0.noOfActions=2
AgentsAuthModuleTests1.policy7.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy7.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy7.noOfSubjects=1
AgentsAuthModuleTests1.policy7.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy7.subject0.name=AmidUser
AgentsAuthModuleTests1.policy7.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy7.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy7.subject0.att0=Values=AgentsAuthModuleTests1.identity7

AgentsAuthModuleTests1.policy7.noOfConditions=1
AgentsAuthModuleTests1.policy7.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy7.condition0.name=AuthScheme_mem_nonrelamQualified
AgentsAuthModuleTests1.policy7.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy7.condition0.att0=AuthScheme=defconfigmem-1

AgentsAuthModuleTests1.policy7.noOfResponseProviders=0

## Policy to verify the Datastore module with realm nonqualified ###############
AgentsAuthModuleTests1.policy8.name=Authpolicy_DatastoreRealmQualified
AgentsAuthModuleTests1.policy8.description=subject test 0
AgentsAuthModuleTests1.policy8.referral=false
AgentsAuthModuleTests1.policy8.active=true

AgentsAuthModuleTests1.policy8.noOfRules=1
AgentsAuthModuleTests1.policy8.rule0.name=rule0
AgentsAuthModuleTests1.policy8.rule0.serviceName=iPlanetAMWebAgentService
AgentsAuthModuleTests1.policy8.rule0.resource=agentsGlobal.resource8
AgentsAuthModuleTests1.policy8.rule0.noOfActions=2
AgentsAuthModuleTests1.policy8.rule0.action0=GET=allow
AgentsAuthModuleTests1.policy8.rule0.action1=POST=allow

AgentsAuthModuleTests1.policy8.noOfSubjects=1
AgentsAuthModuleTests1.policy8.subject0.type=AMIdentitySubject
AgentsAuthModuleTests1.policy8.subject0.name=AmidUser
AgentsAuthModuleTests1.policy8.subject0.includeType=inclusive
AgentsAuthModuleTests1.policy8.subject0.noOfAttributes=1
AgentsAuthModuleTests1.policy8.subject0.att0=Values=AgentsAuthModuleTests1.identity9

AgentsAuthModuleTests1.policy8.noOfConditions=1
AgentsAuthModuleTests1.policy8.condition0.type=AuthSchemeCondition
AgentsAuthModuleTests1.policy8.condition0.name=AuthScheme_DatastorerelamQualified
AgentsAuthModuleTests1.policy8.condition0.noOfAttributes=1
AgentsAuthModuleTests1.policy8.condition0.att0=AuthScheme=/:DataStore

AgentsAuthModuleTests1.policy8.noOfResponseProviders=0

############ Test for policy 0 ###############
AgentsAuthModuleTests1.evaluation0.resource=agentsGlobal.AuthModuleTestresource100
AgentsAuthModuleTests1.evaluation0.username=AgentsAuthModuleTests1.identity11.name
AgentsAuthModuleTests1.evaluation0.password=AgentsAuthModuleTests1.identity11.password
AgentsAuthModuleTests1.evaluation0.noOfModules=3
AgentsAuthModuleTests1.evaluation0.module0.type=DataStore
AgentsAuthModuleTests1.evaluation0.module1.type=LDAP
AgentsAuthModuleTests1.evaluation0.module2.type=AD
AgentsAuthModuleTests1.evaluation0.expectedResult=AgentsAuthModuleTests1_Policy0_Resource
AgentsAuthModuleTests1.evaluation0.description=Access should be allowed as per policy condition definition with request AuthChain_AD_LDAPrelamQualified

############ Test for policy 1 ###############
AgentsAuthModuleTests1.evaluation1.resource=agentsGlobal.resource1
AgentsAuthModuleTests1.evaluation1.username=AgentsAuthModuleTests1.identity10.name
AgentsAuthModuleTests1.evaluation1.password=AgentsAuthModuleTests1.identity10.name
AgentsAuthModuleTests1.evaluation1.noOfModules=2
AgentsAuthModuleTests1.evaluation1.module0.type=DataStore
AgentsAuthModuleTests1.evaluation1.module1.type=LDAP
AgentsAuthModuleTests1.evaluation1.expectedResult=It works!
AgentsAuthModuleTests1.evaluation1.description=Access should be allowed as per policy condition definition with request AuthScheme_LDAP_nonrelamQualified

############ Test for policy 2 ###############
AgentsAuthModuleTests1.evaluation2.resource=agentsGlobal.resource2
AgentsAuthModuleTests1.evaluation2.username=AgentsAuthModuleTests1.identity11.name
AgentsAuthModuleTests1.evaluation2.password=AgentsAuthModuleTests1.identity11.password
AgentsAuthModuleTests1.evaluation2.noOfModules=2
AgentsAuthModuleTests1.evaluation2.module0.type=DataStore
AgentsAuthModuleTests1.evaluation2.module1.type=Active Directory
AgentsAuthModuleTests1.evaluation2.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation2.description=Access should be allowed as per policy condition definition with request AuthScheme_ad_relamQualified

############ Test for policy 3 ###############
AgentsAuthModuleTests1.evaluation3.resource=agentsGlobal.resource3
AgentsAuthModuleTests1.evaluation3.username=AgentsAuthModuleTests1.identity11.name
AgentsAuthModuleTests1.evaluation3.password=AgentsAuthModuleTests1.identity11.password
AgentsAuthModuleTests1.evaluation3.noOfModules=2
AgentsAuthModuleTests1.evaluation3.module0.type=DataStore
AgentsAuthModuleTests1.evaluation3.module1.type=Active Directory
AgentsAuthModuleTests1.evaluation3.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation3.description=Access should be allowed as per policy condition definition with request AuthScheme_ad_relamNOnQualified

############ Test for policy 4 ###############
AgentsAuthModuleTests1.evaluation4.resource=agentsGlobal.resource4
AgentsAuthModuleTests1.evaluation4.username=AgentsAuthModuleTests1.identity12.name
AgentsAuthModuleTests1.evaluation4.password=AgentsAuthModuleTests1.identity12.name
AgentsAuthModuleTests1.evaluation4.noOfModules=2
AgentsAuthModuleTests1.evaluation4.module0.type=DataStore
AgentsAuthModuleTests1.evaluation4.module1.type=Radius
AgentsAuthModuleTests1.evaluation4.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation4.description=Access should be allowed as per policy condition definition with request AuthScheme_radius_relamQualified

############ Test for policy 5 ###############
AgentsAuthModuleTests1.evaluation5.resource=agentsGlobal.resource5
AgentsAuthModuleTests1.evaluation5.username=AgentsAuthModuleTests1.identity12.name
AgentsAuthModuleTests1.evaluation5.password=AgentsAuthModuleTests1.identity12.name
AgentsAuthModuleTests1.evaluation5.noOfModules=2
AgentsAuthModuleTests1.evaluation5.module0.type=DataStore
AgentsAuthModuleTests1.evaluation5.module1.type=Radius
AgentsAuthModuleTests1.evaluation5.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation5.description=Access should be allowed as per policy condition definition with request AuthScheme_radius_relamNOnQualified

############ Test for policy 6 ###############
AgentsAuthModuleTests1.evaluation6.resource=agentsGlobal.resource6
AgentsAuthModuleTests1.evaluation6.username=AgentsAuthModuleTests1.identity7.name
AgentsAuthModuleTests1.evaluation6.password=AgentsAuthModuleTests1.identity7.name
AgentsAuthModuleTests1.evaluation6.noOfModules=2
AgentsAuthModuleTests1.evaluation6.module0.type=DataStore
AgentsAuthModuleTests1.evaluation6.module1.type=Membership
AgentsAuthModuleTests1.evaluation6.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation6.description=Access should be allowed as per policy condition definition with request AuthScheme_membership_relamQualified

############ Test for policy 7 ###############
AgentsAuthModuleTests1.evaluation7.resource=agentsGlobal.resource7
AgentsAuthModuleTests1.evaluation7.username=AgentsAuthModuleTests1.identity7.name
AgentsAuthModuleTests1.evaluation7.password=AgentsAuthModuleTests1.identity7.name
AgentsAuthModuleTests1.evaluation7.noOfModules=2
AgentsAuthModuleTests1.evaluation7.module0.type=DataStore
AgentsAuthModuleTests1.evaluation7.module1.type=Membership
AgentsAuthModuleTests1.evaluation7.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation7.description=Access should be allowed as per policy condition definition with request AuthScheme_membership_relamQualified

############ Test for policy 8 ###############
AgentsAuthModuleTests1.evaluation8.resource=agentsGlobal.resource8
AgentsAuthModuleTests1.evaluation8.username=AgentsAuthModuleTests1.identity9.name
AgentsAuthModuleTests1.evaluation8.password=AgentsAuthModuleTests1.identity9.name
AgentsAuthModuleTests1.evaluation8.noOfModules=1
AgentsAuthModuleTests1.evaluation8.module0.type=DataStore
AgentsAuthModuleTests1.evaluation8.expectedResult=Allow Page
AgentsAuthModuleTests1.evaluation8.description=Access should be allowed as per policy condition definition with request AuthScheme_Datastore_relamQualified


