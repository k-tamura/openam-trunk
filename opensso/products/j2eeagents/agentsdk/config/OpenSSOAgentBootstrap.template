#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2006 Sun Microsystems Inc. All Rights Reserved
#
# The contents of this file are subject to the terms
# of the Common Development and Distribution License
# (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at
# https://opensso.dev.java.net/public/CDDLv1.0.html or
# opensso/legal/CDDLv1.0.txt
# See the License for the specific language governing
# permission and limitations under the License.
#
# When distributing Covered Code, include this CDDL
# Header Notice in each file and include the License file
# at opensso/legal/CDDLv1.0.txt.
# If applicable, add the following below the CDDL Header,
# with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# $Id: OpenSSOAgentBootstrap.template,v 1.1 2008/08/04 20:03:32 huacui Exp $
#
#

# Portions Copyrighted 2011 ForgeRock AS

#------------------------------------------------------------------------------
# Property File for:
# @PRODUCT_AGENT_NAME@ for:
#
# @COMPONENT_NAME@
# Version @COMPONENT_VERSION@
#------------------------------------------------------------------------------
#
# This file provides the configuration settings necessary for the Agent
# to function correctly. Please refer to the documentation before modifying
# any of the values in this file.
#
# WARNING: The contents of this file are classified as an UNSTABLE
# interface by Sun Microsystems, Inc.  As such, they are subject to
# significant, incompatible changes in any future release of the
# software.
#------------------------------------------------------------------------------

#
# Specifies the mode of operation of the Agent Filter. Possible values are
# NONE, SSO_ONLY, J2EE_POLICY, URL_POLICY, ALL. In addition to this setting,
# you can optionally specify applciation specific mode of operation of the
# Agent Filter by adding a MAP construct of this key as a new property. For
# example, to ensure that the Agent Filter operating in the application 'myApp'
# always operates in SSO_ONLY mode, add a new property using the MAP syntax 
# as follows:
#     com.sun.identity.agents.j2ee.filter.mode[myApp]=SSO_ONLY
#
com.sun.identity.agents.j2ee.filter.mode=@FILTER_MODE@

#
# Specifies the URI to be used as the access denied page. 
#
com.sun.identity.agents.j2ee.access.denied.uri=@ACCESS_DENIED_URI@

#
# Specifies if the Agent must use CDSSO processing for user authentication.
#
com.sun.identity.agents.j2ee.cdsso.enabled=false

#
# List of Login URLs
#
com.sun.identity.agents.j2ee.login.url[0]=@LOGIN_URL_0@

#
# List of CDSSO Login URLs
#
com.sun.identity.agents.j2ee.cdsso.login.url[0]=@CDSSO_URL_0@


#
# LOGIN URL or CDSSO URLs PROPERTIES
#   - login.url.prioritized: specifies if the failover sequence for Login URLs 
#     or CDSSO URLs should be prioritized as defined in the list with the lowest 
#     index having the highest priority.
#   - login.url.probe.enabled: specifies if agent will check the availability 
#     of these urls before redirecting to them. 
#     Default value is true for backward compability, but suggests to set it
#     to false (server will not be checked) in production deployment where agent
#     often can not access login url directly.
#   - login.url.probe.timeout: this is the connect timeout value in milliseconds 
#     when login.url.probe.enabled is set to true (or server will be checked).
# Hot-Swap Enabled: Yes
#
com.sun.identity.agents.config.login.url.prioritized = true
com.sun.identity.agents.config.login.url.probe.enabled = true
com.sun.identity.agents.config.login.url.probe.timeout = 2000 

#
# Specifies a skew factor (time in seconds) to be used by the Agent to 
# determine the validity of the CDSSO AuthnResponse assertion.
#
com.sun.identity.agents.j2ee.cdsso.clock.skew=0

#
# Specifies CDSSO 
com.sun.identity.agents.j2ee.cdsso.redirect.uri=@CDSSO_REDIRECT_URI@
com.sun.identity.agents.j2ee.cdsso.cookie.name=amFilterCDSSORequest







com.sun.identity.agents.j2ee.fqdn.check.enable=true
com.sun.identity.agents.j2ee.fqdn.default = serendipity.red.iplanet.com
com.sun.identity.agents.j2ee.fqdn.map[<invalid-name>]=<valid-name>
com.sun.identity.agents.j2ee.legacy.user.agent[0]=<legacy user agent header pattern>
com.sun.identity.agents.j2ee.legacy.redirect.uri=<legacy redirect uri>
com.sun.identity.agents.j2ee.legacy.support.enable=false
com.sun.identity.agents.j2ee.response.header.map[<header-name>]=<header-value>
com.sun.identity.agents.j2ee.auth.handler.map[<appName>]=<handler name>
com.sun.identity.agents.j2ee.redirect.cookie.name=amFilterRDParam
com.sun.identity.agents.j2ee.redirect.attempt.limit=0
com.sun.identity.agents.j2ee.cookie.reset.enable=false
com.sun.identity.agents.j2ee.cookie.reset.name[0]=<first cookie name>
com.sun.identity.agents.j2ee.cookie.reset.domain[<cookiename>]=<cookiedomain>
com.sun.identity.agents.j2ee.cookie.reset.path[<cookiename>]=<cookiepath>
com.sun.identity.agents.j2ee.logout.handler[<appname>]=<handler name>
com.sun.identity.agents.j2ee.port.check.file=PortCheckContent.txt
com.sun.identity.agents.j2ee.port.check.enable=false
com.sun.identity.agents.j2ee.port.check.setting[<port-num>]=<protocol scheme>
com.sun.identity.agents.j2ee.notenforced.uri[0]=<uri value>
com.sun.identity.agents.j2ee.notenforced.uri.invert=false
com.sun.identity.agents.j2ee.notenforced.uri.cache.enable=false
com.sun.identity.agents.j2ee.notenforced.uri.cache.size=1000
com.sun.identity.agents.j2ee.notenforced.ip[0]=<ip value>
com.sun.identity.agents.j2ee.notenforced.ip.cache.enable=true
com.sun.identity.agents.j2ee.notenforced.ip.cache.size=1000
com.sun.identity.agents.j2ee.notenforced.ip.invert=false

com.sun.identity.agents.j2ee.profile.attribute.fetch.mode=<NONE|HTTP_HEADER|REQUEST_ATTRIBUTE|COOKIE>
com.sun.identity.agents.j2ee.profile.attribute.map[<attribute-name>]=<mapped name>
com.sun.identity.agents.j2ee.session.attribute.fetch.mode=<NONE|HTTP_HEADER|REQUEST_ATTRIBUTE|COOKIE>
com.sun.identity.agents.j2ee.session.attribute.map[<attribute-name>]=<mapped name>
com.sun.identity.agents.j2ee.attribute.date.format=EEE, d MMM yyyy hh:mm:ss z
com.sun.identity.agents.j2ee.attribute.cookie.separator=|
com.sun.identity.agents.j2ee.attribute.cookie.encode=true

#
# Cookie Reset Configuration. Uncomment any commented properties before use.
# Hot-Swap Enabled: Yes
#
com.sun.identity.agents.j2ee.cookie.reset.enabled = false
#com.sun.identity.agents.j2ee.cookie.reset.name[0]=<cookiename>
#com.sun.identity.agents.j2ee.cookie.reset.domain[<cookiename>]=<domain>
#com.sun.identity.agents.j2ee.cookie.reset.path[<cookiename>] =  <path>

#
# Logout Processing Configuraton. 
# 'entry.url': Specifies the returning entry point into the applciation after 
#   logout.
# 'introspect.enabhed': When set to true indicates that the Agent can query
#   form information within the reuqest to identify logout events.
# 'logout.application.handler': Application specific logout handler. Must be
#   specified as a MAP with the key being application name. The application 
#   name is the context path of the application without the leading forward 
#   slash. For default web application the application name should be set to 
#   'DefaultWebApp'. Example:
#   com.sun.identity.agents.j2ee.logout.application.handler[myapp]=MyHandler
# 'logout.request.param': Application specific request parameter. Must be 
#   specified as a MAP with the key being application name. For default
#   web application set the application name as 'DefaultWebApp'. Example:
#   com.sun.identity.agents.j2ee.logout.request.param[myapp]=logoutIndicator
# 'logout.uri': Application specific URI that indicates a logout request. Must
#   be specified as a MAP with the key being application name. For default
#   web application set the application name as 'DefaultWebApp'. Example:
#   com.sun.identity.agents.j2ee.logout.uri[myapp]=/myapp/logout
#
# Hot-Swap Enabled: Yes
#
com.sun.identity.agents.j2ee.entry.url=
com.sun.identity.agents.j2ee.logout.introspect.enabled=false
#com.sun.identity.agents.j2ee.logout.application.handler[<appname>]=<handler>
#com.sun.identity.agents.j2ee.logout.request.param[<appname>]=<value>
#com.sun.identity.agents.j2ee.logout.uri[<appname>]=<uri>


com.sun.identity.agents.j2ee.redirect.param = goto
com.sun.identity.agents.j2ee.login.counter.name = amFilterParam
com.sun.identity.agents.j2ee.login.attempt.limit = 0


#
# J2EE policy based properties
#
com.sun.identity.agents.j2ee.login.form[0] =
com.sun.identity.agents.j2ee.login.error.uri[0]=<error uri>
com.sun.identity.agents.j2ee.login.use.internal=true
com.sun.identity.agents.j2ee.login.content.file=FormLoginContent.txt


#
#Realm Properties
#com.sun.identity.agents.j2ee.bypass.principal[0]=
#com.sun.identity.agents.j2ee.verification.handler[<appname>]=<handler class>
com.sun.identity.agents.j2ee.default.privileged.attribute[0]=AGENT_PROTECTION_ROLE
com.sun.identity.agents.j2ee.privileged.attribute.type[0] = Role

#+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#
# Configures the User-Mapping mode used by the Agent. The possible values for
# the key 'user.mapping.mode' are: USER_ID | PROFILE_ATTRIBUTE | HTTP_HEADER |
# SESSION_PROPERTY.
# The key 'user.attribute.name' is the name of the LDAP profile attribute of 
# the currently logged in user if the mapping mode is set to LDAP_ATTRIBUTE, or
# is the name of the HTTP header variable if the mapping mode is set to
# HTTP_HEADER, or the name of the Session property if the mapping mode is set
# to SESSION_PROPERTY. When the mapping mode is set to USER_ID, the user 
# attribute name is not used.
#
# When the mapping mode is set to USER_ID, the value of the user identifier
# is read from a Session property identified by the key 'userid.property'.
# If however, the configuration key 'use.dn' is set to true, the complete DN
# of the user is used as the user identifer instead of the value stored in the
# said Session property.
#
# Hot-Swap Enabled: No
#
com.sun.identity.agents.j2ee.user.mapping.mode=USER_ID
com.sun.identity.agents.j2ee.use.dn=false
com.sun.identity.agents.j2ee.userid.property=UserToken
com.sun.identity.agents.j2ee.user.attribute.name=employeenumber

#
# Audit Log Configuration. The key 'audit.level' determines the events that 
# are logged by the Audit Service. The possible values for this key are:
# LOG_NONE | LOG_ALLOW | LOG_DENY | LOG_BOTH. When a message is logged for an
# unauthenticated user, or for a resource that is not actively protected by the
# Agent, the user is identified by the value as configured for the key:
# 'anonymous.user.name'.
#
# The key 'log.disposition' determines whether the logs will be sent to the
# Server or stored locally. Possible values for this key are LOCAL | REMOTE.
# If the logs are being stored locally, the key 'local.log' identifies the 
# exact filename which will record these logs. If the logs are stored remotely 
# on the Server, the key 'remote.log' identifies the file name under which it 
# will be stored on the Server.
#
# Local logs may be set-up for rotation by specifying the value 'true' for the
# key 'local.log.rotate' and by specifying the size limit of the local logs
# using the key 'local.log.size'. When the log size increases beyond this limit
# the active log file is renamed with the time-stamp suffix indicating the time
# at which it was closed and a new log file is started.
#
# Hot-Swap Enabled: Yes except for 'audit.level' and 'anonymous.user.name'
#
com.sun.identity.agents.j2ee.audit.level=LOG_NONE
com.sun.identity.agents.j2ee.anonymous.user.name=ANONYMOUS
com.sun.identity.agents.j2ee.log.disposition=LOCAL
com.sun.identity.agents.j2ee.remote.log=@REMOTE_LOG_FILE@
com.sun.identity.agents.j2ee.local.log=@LOCAL_LOG_FILE@
com.sun.identity.agents.j2ee.local.log.rotate=false
com.sun.identity.agents.j2ee.local.log.size=52428800

#
# Agent Username and Password. These are the credentials used by the Agent
# to identify and authenticate itself before requesting any services that 
# require the Agent to be authenticated.
# Hot-Swap Enabled: No
com.sun.identity.agents.j2ee.application.user=agent_name
com.sun.identity.agents.j2ee.application.password=agent_password

#
# Runtime configuration for Agent Core.
# Hot-Swap Enabled: No
com.sun.identity.agents.j2ee.locale.language=en
com.sun.identity.agents.j2ee.locale.country=US
com.sun.identity.agents.j2ee.service.resolver=@SERVICE_RESOLVER_CLASS@

#
# Name of the cookie that represents the SSO Token.
# Hot-Swap Enabled: No
com.iplanet.am.cookie.name=iPlanetDirectoryPro

#
# Debug Service Configuration. Possible values for the key 'level' are
# off | error | warning | message. The key 'directory' specifies the output 
# directory where the debug files will be created.
# Note: On Windows platform, use forward slashes "/" to separate directories,
# not black slashes "\". Also, do not use paths that contain spaces in 
# directory names.
# Hot-Swap Enabled: No
com.iplanet.services.debug.level=error
com.iplanet.services.debug.directory=@DEBUG_LOGS_DIR@

#
# Naming service URL. Not hot-swappable.
com.iplanet.am.naming.url=@NAMING_SERVICE_URL@

#
# Notification URL as registered by the Agent to receive session notifications.
# Not hot-swappable.
com.sun.identity.client.notification.url=@NOTIFICATION_URI@

#
# Client IP check for session validation
com.iplanet.am.clientIPCheckEnabled=false

#
# Security Encryption Provider class name. Not hot-swappable.
com.iplanet.security.encryptor=com.iplanet.services.util.JCEEncryption
