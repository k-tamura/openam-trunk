#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 2007 Sun Microsystems Inc. All Rights Reserved
#
# The contents of this file are subject to the terms
# of the Common Development and Distribution License
# (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at
# https://opensso.dev.java.net/public/CDDLv1.0.html or
# opensso/legal/CDDLv1.0.txt
# See the License for the specific language governing
# permission and limitations under the License.
#
# When distributing Covered Code, include this CDDL
# Header Notice in each file and include the License file
# at opensso/legal/CDDLv1.0.txt.
# If applicable, add the following below the CDDL Header,
# with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
# $Id: amAdminCLI.properties,v 1.5 2008/08/19 19:14:54 veiming Exp $
#
#

usage=\nUsage: amadmin ARGUMENTS COMMANDS OPTIONS\n\nARGUMENTS:\nMust specify either a user ID and password, or the version argument.\n    -u <userdn>, --runasdn <userdn>\n        Full DN of the user running the command\n\n    -w <password>, --password <password>\n    -f <filename>, --passwordfile <filename>\n        Full DN of the user used to run the command\n\nCOMMANDS:\nOne of the following commands must be specified in each amadmin command issued.\n    -t <filename>, --data <filename>\n        Load the data from the specified filename.\n\n    -s <filename>, --schema <filename>\n        Load the schema from the specified filename.\n\n    -r <servicename>, --deleteservice <servicename>\n        Deletes the service name from the system.\n\n    -m <servername>, --session <servername>\n        Manage the active sessions on the specified server.\n        Example: -m http://server.east.company.com:8080\n\n    -a <serviceName> <schemaType> <xmlfile>\n    --addattributes <serviceName> <schemaType> <xmlfile>\n        Adds a new attribute to the specified serviceName and\n        schemaType(global, dynamic, organization, or user).\n        The attribute schema being added is defined in the xmlfile.\n\n    -g <filename>, --import <filename>\n        Load the Liberty meta compliance XML into Directory Server.\n        filename contains the meta information and should adhere to\n        the Liberty meta specification and XSD.\n\n    -e, --entityname <entity name>\n\n    -o <filename>, --export <filename>\n        Export an entity to the specified filename. The --entityname\n        parameter must be used to specify the entity name. May also\n        specify --verifysig, --defaulturlprefix, or --metaalias.\n\n    -n, --version\n        Output the version of Access Manager currently installed.\n\nOPTIONS:\n    -l <localename>, --locale <localename>\n        Name of the locale to display the results.\n\n    -v, --verbose\n        Run in verbose mode. Results sent to standard output\n\n    -d, --debug\n        Run in debug mode. Results sent to the debug file.\n\n    -c, --continue\n        Continue processing the input if errors are encountered.\n\n    -y, --verifysig\n        Used in conjunction with the --import command.\n        The imported xml file will run through an xml signature validator.\n\n    -k <url>, --defaulturlprefix <url>\n        Used in conjuction with  --import .\n        Implies the imported EntityDescriptor is a local entity. A\n        series of Access Manager specific attributes will automatically\n        loaded in the directory server. defaulturlprefix is used to build\n        one of the attribute.\n\n    -q <meta alias name>, --metaalias <meta alias name>\n        Used in conjunction with --import.\n        Implies the imported EntityDescriptor is a local entity. A series\n        of Access Manager specific attributes will be automatically loaded\n        to directory server. metaAlias is one of the customizable\n        attribute.\n\n    -x, --xmlsig\n        Used in conjunction with --export.\n        If specifed, the exported doc will be signed.\n\n    -h, --help\n        print Help (this message) and exit.\n\n





version=OpenSSO {0}

###Error Messages###

file=Error 2: Input XML file not found.
nodnforadmin=Error 3: Provide the user DN as value to --runasdn or -u argument.
noservicename=Error 4: Provide the Service Name as value to --deleteservice argument.
nopwdforadmin=Error 5: Provide the password as value to --password or -w argument.
nolocalename=Error 6: Locale name not provided. Locale will default to en_US. Refer docs.
nofile=Error 7: Provide at least one input XML filename to process.
invopt=Error 8: Invalid option.
oprfailed=Error 9: Operation failed:
execfailed=Error 10: Cannot process requests:
policycreatexception=Error 12: Cannot create policy:
policydeletexception=Error 13: Cannot delete policy:
smsdelexception=Error 14: Cannot delete service :
ldapauthfail=Error 15: Cannot authenticate user.
parseerr=Error 16: Cannot parse the input XML file : 
parseiniterr=Error 17: Cannot parse, due to application OR a parser-initialization error.
parsebuilterr=Error 18: Cannot parse, because a Parser with specified options cannot be built.
ioexception=Error 19: Cannot read the input XML file, because IOException has occurred.
fatalvaliderr=Error 20: Cannot parse because XML file is not a valid file :
nonfatalvaliderr=Error 21: Cannot parse because XML file is not a valid file :
validwarn=Error 22: XML file Validation Warnings for file :
failedToProcessXML=Error 23: Cannot process.
nodataschemawarning=Error 24: Neither --data or -t nor --schema or -s option is in the command.
doctypeerror=Error 25: XML file does not follow the right DTD. Check the XML file for DOCTYPE.
statusmsg9=Error 26: LDAP Authentication Failed due to invalid DN or invalid password or invalid hostname or invalid portnumber.
statusmsg13=Error 28: ServiceManager Exception (SSOException):
statusmsg14=Error 29: ServiceManager Exception
statusmsg15=Error 30: Schema file inputstream exception:
statusmsg30=Error 31: PolicyManager Exception (SSOException):
statusmsg31=Error 32: PolicyManager Exception:
dbgerror=Error 33: Only one of the options should be specified:
loginFailed=Error 34: Login Failed!
levelerr=Error 36: Invalid attribute value.
failToGetObjType=Error 37: Error in getting object type:
invalidOrgDN=Error 38: Invalid organization DN:
invalidRoleDN=Error 39: Invalid role DN:
invalidStaticGroupDN=Error 40: Invalid static group DN:
invalidPeopleContainerDN=Error 41: Invalid people container DN:
invalidOrgUnitDN=Error 42: Invalid organizational unit DN:
invalidServiceHostName=Error 43: Invalid Service Host Name
invalidArguments=Invalid Arguments
templatedoesnotexist=Service Template does not exist
roletemplatedoesnotexist=Role Template does not exist
subschemaexception=Error 44: SubSchema is supported only for global and organization :
serviceschemaexception=Error 45: Cannot find Service Schema for Service, {0} of Schema Type, {1}.
roletemplateexception=Error 46: RoleTemplate can be true only if Schema type is dynamic;
cannotAddUsersToFilteredRole=Error 47: Cannot add users to a filtered role.
templateDoesNotExist=Error 48: Template does not exist;
cannotAddUsersToDynamicGroup=Error 49: Cannot add users to a dynamic group.
cannotCreatePolicyUnderContainer=Error 50: Cannot create policy in an organization which is a decendant of a container.
defaultGroupContainerNoFound=Error 51: Group Container, {0} not found.
cannotRemoveUsersFromDynamicGroup=Error 53: Cannot remove users from a dynamic group.
subSchemaStringDoesNotExist=Error 54: Sub Schema String, {0} does not exist.
noentityname=Error 55: Provide the entity name as value to --entityname or -e argument.
nooutfilename=Error 56: Provide the export file name as value to --export or -o argument.
defaultPeopleContainerNotFound=Error 59: People Container, {0} not found.
nodefaulturlprefix=Error 60:No default url prefix specified. Use default protocol://host:port instead.
nometaalias=Error 61: No meta alias specified.
missingEntityName=Error 62: Entity Name is not specified.
missingLibertyMetaInputFile=Error 63: File name for importing meta data is missing.
missingLibertyMetaOutputFile=Error 64: File name for storing exported meta data is missing.
cannotObtainMetaHandler=Error 65: Unable to get a handler to Meta attribute. Specified user name and password may be incorrect.
missingResourceBundleName=Error 66: Missing resource bundle name.
missingResourceFileName=Error 67: Missing resource file name.
failLoadLibertyMeta=Error 68: Failed to load liberty meta to DS. 
failCreateSessionStore=Error 71: Failed to create SessionStore in DB. 
failClearSessionStore=Error 72: Failed to clear SessionStore in DB. 
notSupportedDBMS=Error 73: Not supported DBMS. 

realmExists=Error 101: Realm already exists:
invalidIdType=Error 102: Invalid IdType specified:
identityDoesNotExist=Error 103: Identity does not exist:

###Success Messages###

success=Success 0: Operation completed successfully.
successful=Success 0: Successfully completed.
statusmsg7=Success 0: No Exceptions! LDAP Authentication success!

###Non-fatal (informational) status Messages###

processingDataXML=Info 101: Processing
doneProcessingXML=Info 102: Done processing
loadingServiceSchema=Info 103: Loading Service Schema XML
deletingService=Info 104: Deleting Service Schema XML:
doneLoadingServiceSchema=Info 105: Done loading Service Schema XML:
doneDeletingService=Info 106: Done Deleting Service XML
statusmsg1=Info 107: Calling XML PARSER
statusmsg2=Info 108: XML file to parse:
statusmsg3=Info 109: Calling SCHEMA MANAGER
statusmsg4=Info 110: XML file to import:
statusmsg5=Info 111: Requests generated by amadmin
statusmsg6=Info 112: Entering ldapAuthenticate method!
statusmsg8=Info 113: Calling SSO method!
statusmsg12=Info 115: Reading schema file :
statusmsg17=Info 117: Created PeopleContainer under Container 
statusmsg18=Info 118: Created Role under Container 
statusmsg19=Info 119: Created SubContainer under Container 
statusmsg21=Info 121: Created Group under Organization
statusmsg22=Info 122: Created PeopleContainer under Organization
statusmsg23=Info 123: Created Role under Organization
statusmsg24=Info 124: Created SubOrganization under Organization
statusmsg25=Info 125: Created SubPeopleContainer under PeopleContainer
statusmsg26=Info 126: Created User under PeopleContainer
statusmsg27=Info 127: Getting Groups under Container
statusmsg28=Info 128: Deleting Service
statusmsg29=Info 129: XML file to delete:
statusmsg32=Info 130: Created Policy under Organization
statusmsg33=Info 131: Deleted Policy under Organization
statusmsg34=Info 132: Adding the Attribute
statusmsg35=Info 133: XML file to Add Attribute
addAttributes=Info 134: Adding Attributes:
statusmsg40=Info 136: File to output:
statusmsg37=Info 137: Created Container under Organization 
statusmsg38=Info 138: Created Group Container under Organization
statusmsg39=Info 139: Created Group Container under Container
doneAddingAttributes=Info 140: Done Adding Attributes
statusmsg42=Info 142: Created User under Organization
statusmsg43=Info 143: Created User under Container
statusmsg44=Info 144: Created Agent in Container
statusmsg45=Info 145: Created Agent in Organization
atusmsg46=Info 147: Created Session Store in Database
statusmsg47=Info 148: Cleared Session Store in Database


###Headings###
#
#  in the request's process() method
#

loadServiceSchema=Loading Service Schema XML
deleteServiceSchema=Deleting Service Schema
organization=Organization:
container=Container:
peoplecontainer=PeopleContainer:
group=Group:
role=Role:
policy=Policy:
user=User:
createsuborganization=Create Sub Organizations:
modifyorganization=Modify Organization:
deleteorganizations=Delete Organizations:
createsubcontainers=Create Containers:
createpeoplecontainers=Create People Containers:
modifypeoplecontainer=Modify People Container:
creategroupcontainers=Create Group Containers:
createauthenticationdomain=Create Authentication Domain:
modifyauthenticationdomain=Modify Authentication Domain:
getauthenticationdomain=Get Authentication Domain:
deleteauthenticationdomain=Delete Authentication Domain:
createhostedprovider=Create Hosted Provider: Organization={0} EntityId={1} Role={2}.
modifyhostedprovider=Modify Hosted Provider:
createremoteprovider=Create Remote Provider: Organization={0} EntityId={1} Role={2}.
modifyremoteprovider=Modify Remote Provider:
deleteprovider=Delete Provider:
getprovider=Get Provider:
registeredservices=Registered services:
unregisteredservices=Unregistered services:
createservicetemplates=Create service templates:
nodynamicschema=can not create role template for 
deleteservicetemplates=Delete service templates:
getservicetemplate=Get service template:
modifyservicetemplates=Modify service templates:
addservicetemplateattributevalues=Add values in service attribute:
deleteservicetemplateattributevalues=Delete values in service attribute:
creategroups=Create Groups:
modifygroup=Modify Group:
deletegroups=Delete Groups:
getgroups=Get Groups:
getsubgroups=Get SubGroups:
getroles=Get Roles:
deleteroles=Delete Roles:
createroles=Create Roles:
modifyrole=Modify Role:
getpeoplecontainers=Get People Containers:
addpeoplecontainers=Add People Containers:
deletepeoplecontainers=Delete People Containers:
createusers= Create Users:
addusers= Add Users:
getusers=Get Users:
deleteusers=Delete Users:
removeusers=Remove Users:
modifyuser=Modify User:
getsubcontainers=Get Subcontainers:
modifycontainer=Modify Subcontainer:
deletecontainer=Delete Subcontainer:
getsuborgs=Get Suborganizations:
getregisteredservices=Get Registered services:
numberofservices=Number Of Services:
numberofusers=Number Of Users:
deletedroles=Deleted Roles
deletedusers=Deleted Users
removedusers=Removed Users
deletedpeoplecontainers=Deleted PeopleContainers
deletedsubpeoplecontainers=Deleted SubPeopleContainers
deletedsubcontainers=Deleted SubContainers
deletedsuborganizations=Deleted SubOrganizations
addeduserrole=Added User under Role
addedusergroup=Added User under Group
createEntity=Create {0}:
modifyEntity=Modify {0}:
deleteEntities=Delete {0}:
getEntities=Get {0}:
addnestedgroups=Add Nested Groups:
removenestedgroups=Remove Nested Groups:
getnestedgroups=Get Nested Groups:
numberofnestedgroups=Number Of Nested Groups:
index=Index:
currentSession=[Current Session]
getSessionList=Get Sessions:
serverName=Server Name
userId=User Id:
timeRemain=Time Remain:
maxSessionTime=Max Session Time:
idleTime=Idle Time:
maxIdleTime=Max Idle Time:
serverNameError=Server name syntax error!
sessionsListEmpty=Sessions List Empty!
unsupportedSchemaType=Unsupported schema type.

none=--NONE--
recursive=recursive
nonrecursive=non-recursive
Recursively=Recursively
Nonrecursively=Non-recursively
deleteRealm=Delete Realm:
realm=Realm Request:
createRealm=Create Realm:
inrealm=in Realm
fromrealm=from Realm
fromIdentity=from Identity
inservice=in Service
of=of
is=Is
to=to
withpattern=With Pattern
foridentity=For Identity
getSubRealms=SubRealms in Realm:
getAssignableSvcs=Assignable Services for Realm:
getAssignedSvcs=Assigned Services for Realm:
realmAssignSvc=Assign Services to Realm:
realmUnassignSvc=Unassign Service
realmAttributes=Attributes for Service
realmSvcAttributes=Service Attributes for Service
realmRmAttribute=Remove Attribute
realmModifySvc=Modify Service
realmAddAttrVal=Add Attribute Values to Attribute
realmRmAttrVal=Remove Attribute Values from Attribute
realmSetAttrs=Set Attributes for Service
identity=Identity Request:
createIdentity=Create Identity
createIdentities=Create Identities of
deleteIdentities=Delete Identities of
searchIdentities=Search For Identities of
getAllowedIdOps=Allowed Identity Operations of
getSupportedIdTypes=Supported Identity Types in Realm
getAssignableSvcId=Assignable Services for Identity
getAssignedSvcId=Assigned Services for Identity
getSvcAttrsId=Service Attributes for Service
getAttrsId=Attributes for Identity
getMembershipsId=Memberships for Identity
idIsMember=is Member of
active=Active
getMembersId=Members of Identity
addIdentity=Add Identity
asMemberOf=as Member of
rmIdentity=Remove Identity
addServiceId=Assign Service
rmServiceId=Unassign Service
modServiceId=Modify Service
setAttrId=Set Attributes
couldNotFindIdentity=Could Not Find Identity {0}, of type {1} in realm, {2}.
foundMultiIdentity=Found Multiple Identities For Identity {0}, of type {1} in realm, {2}.
identityname=Identity
canNotAddMembersOf=Can Not Add Members of
doesNotSupportServices=Does Not Support Services
doesNotSupportCreation={0} does Not Support Creation of Identities of {1}.
canNotBeMemberOf=Can Not Be A Member of
canNotHaveMembers=Can Not Have Members
canNotRemoveMembersOf=Can Not Remove Members of

orgServices=Organization services
dynamicServices=Dynamic services
orgAttributes=Organization attributes
dynamicAttributes=Dynamic attributes

#
#  these get used in the request's toString() method
#
requestdescription2=Request Description: Create Group in Container
requestdescription3=Request Description: Create People-Container in Container
requestdescription4=Request Description: Create Role in Container
requestdescription5=Request Description: Create Sub-Container in Container
requestdescription7=Request Description: Delete Group in Container
requestdescription8=Request Description: Delete People Container in Container
requestdescription9=Request Description: Delete Role in Container
requestdescription10=Request Description: Delete Sub-Container in Container
requestdescription12=Request Description: Get Groups from Container
requestdescription13=Request Description:  Get Number of services from Container
requestdescription14=Request Description:  Get People Containers from Container
requestdescription15=Request Description:  Get RegisteredServices from Container
requestdescription16=Request Description:  Get RegisteredServices from Container
requestdescription17=Request Description:  Get SubContainers from Container
requestdescription18=Request Description:  Get Users from Container
requestdescription19=Request Description:  AddUsers to Group
requestdescription20=Request Description:  Create Sub-Groups in Group
requestdescription21=Request Description:  Delete Sub-Groups in Group
requestdescription22=Request Description:  Get Num-Of-Users from Group
requestdescription23=Request Description:  Get Sub-Groups from Groups
requestdescription24=Request Description:  Get Users from Groups
requestdescription26=Request Description: Create Group in Organization
requestdescription27=Request Description: Create People-Containers in Organization
requestdescription29=Request Description: Create Sub-Org for Organization
requestdescription31=Request Description: Delete Groups in Organization
requestdescription32=Request Description: Delete People Containers in Organization
requestdescription36=Request Description: Get Groups from Organization
requestdescription38=Request Description: Get People Containers from Organization
requestdescription39=Request Description: Get RegisteredServices from Organization
requestdescription40=Request Description: Get Roles from Organization
requestdescription41=Request Description: Get Sub-Orgs from Organization
requestdescription44=Request Description: Registers service in Organization
requestdescription45=Request Description: Unregisters service in Organization
requestdescription46=Request Description: Create Sub-People Containers in PeopleContainer
requestdescription47=Request Description: Create Users in PeopleContainer
requestdescription48=Request Description: Delete Sub-People Container in PeopleContainer
requestdescription49=Request Description: Delete Users in PeopleContainer
requestdescription50=Request Description: Get Num-Of-Users from Peoplecontainer
requestdescription51=Request Description: Get Sub-People Container from PeopleContainer
requestdescription52=Request Description: Get Users from PeopleContainer
requestdescription54=Request Description: Add Users to Role
requestdescription56=Request Description: Get Users from Role
requestdescription57=Request Description: Registers service in Container
requestdescription58=Request Description: Unregister service in Container
requestdescription59=Request Description: Registers service in User
requestdescription60=Request Description: Unregisters service in User
requestdescription61=Request Description: Create service template in Organization.
requestdescription62=Request Description: Delete service template in Organization.
requestdescription63=Request Description: Create service template in Container.
requestdescription65=Request Description: Modify service template in Organization.
requestdescription66=Request Description: Modify service template in Container.
requestdescription67=Request Description: Create service template in Role.
requestdescription68=Request Description: Modify service template in Role.
requestdescription69=Request Description: Get service template in Organization.
requestdescription70=Request Description: Modify user in People Container.
requestdescription71=Request Description: Modify People Container.
requestdescription72=Request Description: Modify group.
requestdescription73=Request Description: Create Sub-Container in Organization.
requestdescription74=Request Description: Create Group Containers in Organization.
requestdescription75=Request Description: Create Group Containers in Container.
requestdescription76=Request Description: Remove values in service attribute in Organization.
requestdescription77=Request Description: Remove values in service attribute in Container.
requestdescription78=Request Description: Add values in service attribute in Organization.
requestdescription79=Request Description: Add values in service attribute in Container.
requestdescription80=Request Description: Remove Users in Group.
requestdescription81=Request Description: Create User in Containers.
requestdescription82=Request Description: Create User in Organization.
requestdescription83=Request Description: Remove Users in Role.
requestdescription84=Request Description: Create Agent in Container.
requestdescription85=Request Description: Delete Agent in Container.
requestdescription86=Request Description: Modify Agent in Container.
requestdescription87=Request Description: Create Agent in Organization.
requestdescription88=Request Description: Delete Agent in Organization.
requestdescription89=Request Description: Modify Agent in Organization.
requestdescription90=Request Description: Get Agents in Organization.
requestdescription91=Request Description: Get Agents in Container.
requestdescription92=Request Description: Add nested group to Group.
requestdescription93=Request Description: Remove nested group from Group.
requestdescription94=Request Description: Get Nested Groups in Group.
requestdescription95=Request Description: Get Number of Nested Groups in Group.

requestdescription100r=Request Description: Recursively Delete Realm
requestdescription100n=Request Description: Non-Recursively Delete Realm
requestdescription101=Request Description: Create Realm
requestdescription102=Request Description: Get SubRealm Names in Realm
requestdescription103=Request Description: Get Assignable Services for Realm
requestdescription104=Request Description: Get Assigned Services for Realm
requestdescription105=Request Description: Assign Service to Realm
requestdescription106=Request Description: Unassign Service
requestdescription107=Request Description: Get Attributes for Service
requestdescription108=Request Description: Get Service Attributes for Realm
requestdescription109=Request Description: Remove Attribute from Realm
requestdescription110=Request Description: Modify Service in Realm
requestdescription111=Request Description: Add Attribute Values to Service in Realm
requestdescription112=Request Description: Remove Attribute Values in Realm
requestdescription113=Request Description: Set Attributes in Realm
requestdescription114=Request Description: Create Identity in Realm
requestdescription115=Request Description: Create Identities in Realm
requestdescription116=Request Description: Delete Identities from Realm
requestdescription117=Request Description: Search Identities in Realm
requestdescription118=Request Description: Get Allowed Identity Operations in Realm
requestdescription119=Request Description: Get Supported Identity Types in Realm
requestdescription120=Request Description: Get Assignable Services for Identity in Realm
requestdescription121=Request Description: Get Assigned Services for Identity in Realm
requestdescription122=Request Description: Get Service Attributes for Identity in Realm
requestdescription123=Request Description: Get Attributes for Identity in Realm
requestdescription124=Request Description: Get Memberships for Identity in Realm
requestdescription125=Request Description: Check Identity is Member of Realm/Identity
requestdescription126=Request Description: Check Identity is Active in Realm
requestdescription127=Request Description: Get Members for Identity in Realm
requestdescription128=Request Description: Add Member to Identity in Realm
requestdescription129=Request Description: Remove Member from Identity in Realm
requestdescription130=Request Description: Assign Service to Identity in Realm
requestdescription131=Request Description: Unassign Service from Identity in Realm
requestdescription132=Request Description: Modify Service in Realm
requestdescription133=Request Description: Set Attributes in Realm

requestdescription134=Request Description: Get Privileges of an Identity, {1} of type, {2} under realm, {0}.
requestdescription135=Request Description: Add Privileges to an Identity, {1} of type, {2} under realm, {0}.
requestdescription136=Request Description: Remove Privileges from an Identity, {1} of type, {2} under realm, {0}.

toInvalidate=To invalidate sessions, enter the index numbers
CRToExit=[CR without a number to exit]: 
ioExceptionReadingInput=IO Exception reading input:
selectionNotInList=Your selection is not in the session list
sessionFinished=Session command finished!
destroySessionSucceeded=Destroy Session Succeeded!
templateNotExist=The template does not exist for the service
unableToRegisterService=service is not registered in the parent organization.
entityDoNotExists=Entity, {0} does not exist.
invalidEntity=Invalid Entity.
missingResourceBundle=Unable to find resource bundle.
noMembers=There are no members.
noMatchIds=There are no matching identity for search pattern {0}.

##Federation services related messages##
account-not-federated=Account is not federated!
accountmgr-error=Error retrieving federated accounts!

##Log messages
#
#  in the doLog() after the request's process() is completed
#
create-remote-prov= Created Remote Provider {0} 
modify-remote-prov= Modified Remote Provider {0} 
create-hosted-prov= Created Hosted Provider {0} 
modify-hosted-prov= Modified Hosted Provider {0} 
delete-prov= Deleted Remote Provider {0} 
create-cot= Created Authentication Domain {0} 
modify-cot= Modified Authentication Domain {0} 
delete-cot= Deleted Authentication Domain {0} 
delete-policy= Deleted Policy {0} in {1}
add-resource-bundle-to-directory-server=Added Resource Bundle {0} of locale {1} to Directory Server.
add-default-resource-bundle-to-directory-server=Added Default Resource Bundle {0} to Directory Server.
delete-resource-bundle-from-directory-server=Deleted Resource Bundle {0} of locale {1} from Directory Server.
delete-default-resource-bundle-from-directory-server=Deleted Default Resource Bundle {0} from Directory Server.
modified-sub-configuration-in-orgnaization=Modified Sub Configuration, {0} of service, {1} in organization, {2}.
added-sub-configuration-in-orgnaization=Added Sub Configuration, {0} of service, {1} in organization, {2}.
deleted-sub-configuration-in-orgnaization=Deleted Sub Configuration, {0} of service, {1} in organization, {2}.
modified-service-schema=Modified Service Schema of service {0}.
deleted-service-subschema=Deleted Service Sub Schema, {0} of service {1}.
added-service-subschema=Added Service Sub Schema to service {0}.
added-sub-configuration-to-default=Add Sub Configuration, {0} of service, {1}.
modified-sub-configuration-to-default=Modified Sub Configuration, {0} of service, {1}.
deleted-sub-configuration-to-default=Deleted Sub Configuration, {0} of service, {1}.
deleted-all-configurations=Deleted all Service Configurations of service, {0}.
get-sub-configuration=Get Sub Configuration, {0} of service, {1}.
no-organization-sub-configuration=There are no organization sub configurations.

searchSizeLimitExceeded=Search size limit exceeded. Please refine your search.
searchTimeLimitExceeded=Search time limit exceeded. Please refine your search
sizeLimitExceeded=Search size limit exceeded. Increase the search limit.
timeLimitExceeded=Search time limit exceeded. Increase the time limit.
invalidServiceRevisionNumber=Invalid Service Revision Number, {0}.
setServiceRevisionNumber=Revision Number of {0} is set to {1}.
subconfigNotFound=Could not locate the sub config {0} in {1}.
missingServiceName=Unable to process the request because service name is missing.
exception_while_exporting_policy=Exception while exporting policy
exception_while_adding_plugin_interface=Exception while adding Plug-in Interface

#
#  Realm request log messages
#
deleted-realm={0} Deleted Realm {1}

get-realm-service-attribute-info=Get service attributes for service, {0} in realm, {1}.
get-realm-service-attribute-no-results=There are no attribute values for service, {0} in realm, {1}.
service-no-assigned-to-realm=Service, {0} is not assigned to realm, {1}.

delegation-no-privileges=There are no privileges
delegation-get-privileges=Get Privileges of an Identity, {1} of type, {2} under realm, {0}.
delegation-add-privileges=Add Privileges to Identity, {1} of type, {2} under realm, {0}.
delegation-already-has-privilege=Privilege, {0} is already granted.
delegation-remove-privileges=Remove Privileges from Identity, {1} of type, {2} under realm, {0}.
delegation-does-not-has-privilege=Privilege, {0} cannot be removed because it is not granted.
