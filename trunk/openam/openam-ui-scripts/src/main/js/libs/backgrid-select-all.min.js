/*
 backgrid-select-all
 http://github.com/wyuenho/backgrid
 Copyright (c) 2013 Jimmy Yuen Ho Wong and contributors
 Licensed under the MIT @license.
 */
!function(e,t){"function"==typeof define&&define.amd?define(["backbone","backgrid","underscore"],t):"object"==typeof exports?module.exports=t(require("backbone"),require("backgrid"),require("underscore")):t(e.Backbone,e.Backgrid,e._)}(this,function(e,t,c){"use strict";var i=t.Extension.SelectRowCell=e.View.extend({className:"select-row-cell",tagName:"td",events:{"keydown input[type=checkbox]":"onKeydown","change input[type=checkbox]":"onChange","click input[type=checkbox]":"enterEditMode"},initialize:function(e){this.column=e.column,this.column instanceof t.Column||(this.column=new t.Column(this.column));var c=this.column,i=this.model,o=this.$el;this.listenTo(c,"change:renderable",function(e,t){o.toggleClass("renderable",t)}),t.callByNeed(c.renderable(),c,i)&&o.addClass("renderable"),this.listenTo(i,"backgrid:select",function(e,t){this.checkbox().prop("checked",t).change()})},checkbox:function(){return this.$el.find("input[type=checkbox]")},enterEditMode:function(){this.checkbox().focus()},exitEditMode:function(){this.checkbox().blur()},onKeydown:function(e){var c=new t.Command(e);return c.passThru()?!0:void(c.cancel()?(e.stopPropagation(),this.checkbox().blur()):(c.save()||c.moveLeft()||c.moveRight()||c.moveUp()||c.moveDown())&&(e.preventDefault(),e.stopPropagation(),this.model.trigger("backgrid:edited",this.model,this.column,c)))},onChange:function(){var e=this.checkbox().prop("checked");this.$el.parent().toggleClass("selected",e),this.model.trigger("backgrid:selected",this.model,e)},render:function(){return this.$el.empty().append('<input tabindex="-1" type="checkbox" />'),this.delegateEvents(),this}}),o=t.Extension.SelectAllHeaderCell=i.extend({className:"select-all-header-cell",tagName:"th",initialize:function(e){this.column=e.column,this.column instanceof t.Column||(this.column=new t.Column(this.column));var i=this.collection,o=this.selectedModels={};this.listenTo(i.fullCollection||i,"backgrid:selected",function(e,t){t?o[e.id||e.cid]=1:(delete o[e.id||e.cid],this.checkbox().prop("checked",!1)),c.keys(o).length===(i.fullCollection||i).length&&this.checkbox().prop("checked",!0)}),this.listenTo(i.fullCollection||i,"remove",function(e){delete o[e.id||e.cid],0===(i.fullCollection||i).length&&this.checkbox().prop("checked",!1)}),this.listenTo(i,"backgrid:refresh",function(){if(0===(i.fullCollection||i).length)this.checkbox().prop("checked",!1);else for(var e=this.checkbox().prop("checked"),t=0;t<i.length;t++){var c=i.at(t);(e||o[c.id||c.cid])&&c.trigger("backgrid:select",c,!0)}});var n=this.column,l=this.$el;this.listenTo(n,"change:renderable",function(e,t){l.toggleClass("renderable",t)}),t.callByNeed(n.renderable(),n,i)&&l.addClass("renderable")},onChange:function(){var e=this.checkbox().prop("checked"),t=this.collection;t.each(function(t){t.trigger("backgrid:select",t,e)}),t.fullCollection&&t.fullCollection.each(function(c){t.get(c.cid)||c.trigger("backgrid:selected",c,e)}),this.collection.trigger("backgrid:select-all",this.collection,e)}});t.Grid.prototype.getSelectedModels=function(){for(var e,t=this.header.row.cells,c=0,i=t.length;i>c;c++){var n=t[c];if(n instanceof o){e=n;break}}var l=[];if(e){var r=e.selectedModels,s=this.collection.fullCollection||this.collection;for(var d in r)l.push(s.get(d))}return l},t.Grid.prototype.clearSelectedModels=function(){for(var e=this.getSelectedModels(),t=0,c=e.length;c>t;t++){var i=e[t];i.trigger("backgrid:select",i,!1)}}});