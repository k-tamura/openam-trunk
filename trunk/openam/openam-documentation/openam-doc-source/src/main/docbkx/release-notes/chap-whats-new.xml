<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2014 ForgeRock AS
  !    
-->
<chapter xml:id='chap-whats-new'
 xmlns='http://docbook.org/ns/docbook' version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook
                     http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'>
 <title>What's New in OpenAM <?eval ${serverDocTargetVersion}?></title>

 <para>OpenAM <?eval ${serverDocTargetVersion}?> fixes a number of issues, and
 provides the following additional features.</para>

 <itemizedlist>
  <title>Major New Features</title>

  <listitem>
    <para>
     <!-- KEEP THIS AT TOP -->
     <emphasis role="bold">Click-Through Licensing</emphasis>. OpenAM now
      displays a software license acceptance screen when
      configuring the core server, OpenAM tools, and Web and J2EE agents.
      You must agree to the license to complete the installation of OpenAM and
      its components.</para>

     <para>You can view a copy of the license at
      <filename>&lt;server-root>/legal-notices/license.txt</filename>.
      The default folder location for the licenses is stored at
      <filename>WEB-INF/legal-notices</filename>.
    </para>
    <itemizedlist>
     <listitem>
      <para><emphasis>GUI Installer</emphasis>. When you select either the
       Create Default Configuration or Create New Configuration link on the
       OpenAM Configurator page, the software license agreement screen is
       displayed. Click the checkbox to accept the license and
       continue the configuration.</para>

      <mediaobject xml:id="openam-license-dialog">
       <alt>OpenAM License Agreement</alt>
       <imageobject>
        <imagedata fileref="images/openam-license-dialog.png" format="PNG"/>
       </imageobject>
       <textobject>
        <para>You must accept the license agreement to continue the install.</para>
       </textobject>
      </mediaobject>
     </listitem>
     <listitem>
      <para><emphasis>Web and J2EE Agent Installers</emphasis>. The
       <command>agentadmin --install</command> command now displays the
       software license acceptance screen prior to installing the agent.
       You can scroll through the license by pressing &lt;Enter&gt;.
       At the prompt, enter <literal>yes</literal> to accept the license and
       continue the installation.</para>
       <screen>$ bin/agentadmin --install

Please read the following License Agreement carefully:

Press &lt;Enter> to continue...] or [Enter n To Finish]

Do you completely agree with all the terms and conditions of this License
Agreement (yes/no): [no]:</screen>
      <para>For scripted or silent installs, OpenAM provides a new command-line
       option, <option>--acceptLicense</option>, to suppress the license acceptance
       screen.
       Using the option indicates that you have read and accepted the terms
       stated in the license.</para>
     </listitem>
     <listitem>
      <para><emphasis>SSOADM</emphasis>. The <command>ssoadm</command> tool
       has been updated to display the license acceptance screen when the
       <command>setup</command> or <command>setup.bat</command> command is run.
       Enter <literal>yes</literal> to accept the license and continue the
       configuration.</para>
<screen>Do you accept the license? yes</screen>
      <para>For scripted or silent installs, you can modify the
       <command>setup</command> or <command>setup.bat</command> script
       with the addition of the <option>--acceptLicense</option> option.
       Simply append the option to the end of the script as follows:</para>
       <programlisting>$JAVA_HOME/bin/java -D"load.config=yes" -D"help.print=$help_print" \
 -D"path.AMConfig=$path_AMConfig" -D"path.debug=$path_debug" \
 -D"path.log=$path_log" \
 -cp "$CLASSPATH" com.sun.identity.tools.bundles.Main \
 --acceptLicense</programlisting>
      </listitem>
      <listitem>
       <para><emphasis>Configurator and Upgrader Jar Files</emphasis>. The
        executable jar files, ${ssoconfigJarFile} and ${ssoconfigUpgradeJarFile},
        now support an optional <property>ACCEPT_LICENSES</property> property
        that can be added to the configuration file.
        If <property>ACCEPT_LICENSES=true</property>, the license acceptance
        screen will be skipped when the jar file is run with the configuration file.
        Any other value will be assumed to equal <literal>false</literal>, resulting
        in the presentation of the license acceptance screen. Default value is
        <literal>false</literal>.</para>

       <para>The configurator and upgrader executable jar files also accept the
        <option>--acceptLicense</option> option on the command line.
        The configuration property, <property>ACCEPT_LICENSES</property>, has
        precedence over the command-line option, <option>--acceptLicense</option>.
       </para>
      </listitem>
    </itemizedlist>
  </listitem>

  <listitem>
   <para><!-- Enhancement: AME-3299 -->
    <emphasis role="bold">CORS support for OpenAM APIs</emphasis>.
    OpenAM now supports cross-origin resource sharing (CORS)
    to allow requests to be made across domains from user agents.
    Applications in browsers that support CORS
    can therefore now successfully make calls to an OpenAM server
    that runs in a different domain from the application.
   </para>

   <para>
    Instead, you must configure CORS support in OpenAM's deployment descriptor.
    For instructions, see <link
     xlink:href="install-guide#enable-cors-support"
     xlink:role="http://docbook.org/xlink/role/olink"
     xlink:show="new"><citetitle>Enabling CORS Support</citetitle></link>.
   </para>
  </listitem>

  <listitem>
   <para><!-- Story: AME-2565 -->
    <emphasis role="bold">Session failover across Sites</emphasis>.
    OpenAM now allows session failover across OpenAM Sites.
    In order to take advantage of this capability,
    you must make sure that the underlying Core Token Service
    replicates session data across your OpenAM Sites.
   </para>

   <para>
    For details on setting up the underlying Core Token Service, see
    <link
     xlink:href="install-guide#chap-cts"
     xlink:role="http://docbook.org/xlink/role/olink"
     xlink:show="new"
    ><citetitle>Configuring the Core Token Service</citetitle></link>.
   </para>
  </listitem>

  <listitem>
   <para>
    <emphasis role="bold">New REST APIs for policy</emphasis>.
    OpenAM now exposes new common REST APIs for requesting decisions,
    and for defining policies, applications, and conditions.
    For details, see the <citetitle>Developer Guide</citetitle> section on
    <link
     xlink:href="dev-guide#rest-api-authz"
     xlink:role="http://docbook.org/xlink/role/olink"
     xlink:show="new"><citetitle>Authorization</citetitle></link>.
   </para>
  </listitem>

  <listitem>
   <para>
    <emphasis role="bold">Scripted Authentication Modules</emphasis>.
    OpenAM now supports scripted authentication modules.
    A scripted authentication module runs a script to perform authentication,
    making it easier than ever before to develop custom authentication modules.
   </para>

   <para>
    Scripted authentication modules
    have access to the same data as other modules in the chain,
    can access user profile data during authentication,
    can make HTTP calls to external services,
    and are sandboxed for more secure operation.
    The scripts are stored in OpenAM configuration data,
    and so transparently available across OpenAM Sites.
    Server-side scripts can be written in either Groovy or JavaScript.
   </para>

   <para>
    For details on writing authentication module scripts, see the
    <citetitle>Developer Guide</citetitle> chapter,
    <link
     xlink:href="dev-guide#chap-scripted-auth-module"
     xlink:role="http://docbook.org/xlink/role/olink"
     xlink:show="new"
    ><citetitle>Scripting Authentication</citetitle></link>.
   </para>

   <para>
    For details on configuring scripted authentication modules, see the
    <citetitle>Administration Guide</citetitle> section on
    <link
     xlink:href="admin-guide#scripted-module-conf-hints"
     xlink:role="http://docbook.org/xlink/role/olink"
     xlink:show="new"
    ><citetitle>Hints For Scripted Authentication Modules</citetitle></link>.
   </para>
  </listitem>
 </itemizedlist>

 <itemizedlist>
  <title>Additional New Features</title>

  <listitem><!-- Enhancement: AME-2210 -->
   <para><emphasis role="bold">Persistent Cookie from Client IP Issued</emphasis>.
    The Persistent Cookie module has been enhanced to enforce
    that the persistent cookie can only be used from the same client IP
    to which the cookie was issued.
   </para>
  </listitem>

  <listitem><!-- AME-2972 -->
    <para>
     <emphasis role="bold">CREST Policy Filter Rules</emphasis>.
     OpenAM now supports CREST Policy Filter rules
     that simplify the configuration to protect ForgeRock common REST APIs.
    </para>

    <para>
     For instructions on configuring a CREST Policy Filter rule, see
     <link
      xlink:show="new"
      xlink:href="admin-guide#define-crest-policy-rules"
      xlink:role="http://docbook.org/xlink/role/olink"
     ><citetitle>To Define CREST Policy Filter Rules</citetitle></link>
     in the <citetitle>Administration Guide</citetitle>.
    </para>
   </listitem>

  <listitem><!-- AME-2975 -->
   <para>
     <emphasis role="bold">OAuth 2.0 Scope Conditions</emphasis>.
     OpenAM now supports an OAuth2 Scope condition
     that lets the you set required OAuth 2.0 scopes as a policy condition.
    </para>
   </listitem>

  <listitem><!-- AME-3150 -->
   <para>
    <emphasis role="bold">OpenID Connect 1.0 Authentication Module</emphasis>.
    OpenAM now provides an authentication module
    that lets OpenAM rely on an OpenID Connect provider's ID Token
    to authenticate an end user.
    For details on configuring the module, see
    <link
     xlink:show="new"
     xlink:href="admin-guide#oidc-module-conf-hints"
     xlink:role="http://docbook.org/xlink/role/olink"
    ><citetitle>Hints for the OpenID Connect Token Authentication Module</citetitle></link>
    in the <citetitle>Administration Guide</citetitle>.
   </para>
  </listitem>

  <listitem>
    <para>
     <emphasis role="bold">Quicker UI Customization</emphasis>.
     While customizing the UI, you can set the advanced server property,
     <literal>org.forgerock.openam.core.resource.lookup.cache.enabled</literal>,
     to <literal>false</literal> to allow OpenAM immediately to pick up changes
     to the files as you customize them
     (<link
       xlink:show="new"
       xlink:href="https://bugster.forgerock.org/jira/browse/OPENAM-3989"
      >OPENAM-3989</link>).
     You can set advanced server properties in OpenAM Console under
     Configuration > Servers and Sites > <replaceable>Server Name</replaceable> > Advanced.
     For production servers, leave this set to the default, <literal>true</literal>.
    </para>
  </listitem>

  <listitem>
    <para>
     <emphasis role="bold">Whitelist for Custom Login URIs</emphasis>.
     OpenAM now includes a property that specifies
     a whitelist for custom login URIs
     so that the CDCServlet and the Distributed Authentication UI (DAS)
     can check login URI values against those in the whitelist
     (<link
       xlink:show="new"
       xlink:href="https://bugster.forgerock.org/jira/browse/OPENAM-3918"
      >OPENAM-3918</link>).
    </para>

    <para>
     The property name is <literal>org.forgerock.openam.cdc.validLoginURIs</literal>.
     For more information about this property,
     see the <citetitle>Reference</citetitle> section on advanced properties,
     <link
      xlink:show="new"
      xlink:href="reference#servers-advanced-configuration"
      xlink:role="http://docbook.org/xlink/role/olink"
     ><citetitle>Servers &gt; Advanced</citetitle></link>.
    </para>
  </listitem>

  <listitem>
    <para>
     <emphasis role="bold">OpenID Connect Registration Without an Access Token</emphasis>.
     OpenAM can now be configured to let OpenID Connect clients
     register dynamically without having to provide an access token
     (<link
       xlink:show="new"
       xlink:href="https://bugster.forgerock.org/jira/browse/OPENAM-3604"
      >OPENAM-3604</link>).
     For details, see the documentation on the advanced server property,
     <literal>org.forgerock.openam.openidconnect.allow.open.dynamic.registration</literal>,
     in the <citetitle>OpenAM Reference</citetitle> section,
     <link
      xlink:show="new"
      xlink:href="reference#servers-advanced-configuration"
      xlink:role="http://docbook.org/xlink/role/olink"
     ><citetitle>Servers > Advanced</citetitle></link>.
    </para>
  </listitem>

  <listitem>
    <para>
     <emphasis role="bold">Policy Support for Common HTTP Operations</emphasis>.
     OpenAM policies now let you allow and deny not only HTTP GET and HTTP POST,
     but also HTTP DELETE, HEAD, OPTIONS, PATCH, and PUT
     (<link xlink:show="new"
            xlink:href="https://bugster.forgerock.org/jira/browse/OPENAM-336"
     >OPENAM-336</link>).
    </para>
  </listitem>

  <listitem>
    <para>
     TODO: Update for next version
    </para>
  </listitem>
 </itemizedlist>
</chapter>
