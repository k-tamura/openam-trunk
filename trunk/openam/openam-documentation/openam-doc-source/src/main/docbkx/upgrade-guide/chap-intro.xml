<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2013 ForgeRock, Inc.
  !    
-->
<chapter xml:id='chap-intro'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Introduction to Updates and Upgrades</title>
  <indexterm><primary>Updating</primary></indexterm>
  <indexterm><primary>Upgrading</primary></indexterm>
  <indexterm><primary>Version Number</primary></indexterm>
  <indexterm><primary>Patches</primary></indexterm>
  <indexterm>
   <primary>Legacy</primary>
   <secondary>Migration</secondary>
  </indexterm>
  <indexterm><primary>Patches</primary></indexterm>
  <indexterm>
   <primary>Policy Agents</primary>
  </indexterm>
  <indexterm>
   <primary>Policy Agents</primary>
   <secondary>Java EE agents</secondary>
  </indexterm>
  <indexterm>
   <primary>Policy Agents</primary>
   <secondary>Web agents</secondary>
  </indexterm>
  <indexterm>
   <primary>Policy Agents</primary>
   <secondary>Windows IIS agents</secondary>
  </indexterm>
  <indexterm>
   <primary>Restore</primary>
   <secondary>Previous Instance</secondary>
  </indexterm>

 <para>This chapter provides the basic definitions for the different methods of 
 amending your OpenAM deployment to a more current version: patches, update, upgrade, 
 patches, migration, and restoration. Understanding the differences between the 
 various ways of refreshing your OpenAM instance is important to making sure the 
 right steps are followed during the transition. Here is a quick breakdown of 
 the different ways to bring your OpenAM installation up to date:</para>
 
 <itemizedlist>
  
  <listitem>
   <para>Patches are applied for limited fixes and corrections.</para>
  </listitem>

  <listitem>
   <para>Updates are applied as maintenance versions of 
   OpenAM.</para>
  </listitem>
 
  <listitem>
   <para>Upgrades indicate major change in functionality between OpenAM versions.</para>
  </listitem>

  <listitem>
   <para>Legacy releases require time and caution because they are several versions 
   behind the most recently released version (instances starting with 9.0.x and earlier).</para>
  </listitem>

  <listitem>
   <para>Restoring an earlier instance of OpenAM reverts your version of
   the software to a previous instance if you encounter issues when updating
   or upgrading to a more current version.</para>
  </listitem>
  
 </itemizedlist>

 <para>This guide provides examples that use Apache Tomcat on Ubuntu to illustrate
 the procedures. <!-- TO DO The <citetitle>Deployment Guide</citetitle> provides
 details to help you adapt other application containers.--></para>
 
 <section xml:id="version-numbers">
  <title>Version Numbers and Their Meaning</title> 
  
  <para>Version numbers are important to understand because they show you
  if a release is an upgrade, an update, or a patch. The version number has three 
  parts to help you identify which type of update you are considering.</para>
  
  <para>To better understand the numbering, we will look at the latest OpenAM release
  available when this guide was first published, OpenAM 10.1.0. Each of the numbers tells
  you something about the release.</para>
  
  <para>The first part of the version number (10.x.x) is the major version of 
  the release. If you instance is OpenAM 9.x.x, then you are missing out on some
  major new features.</para>

  <para>The second part of the version number (x.1.x) is the minor version of
   the release. If your instance is OpenAM 10.0.X, then you have missed some
   changes, usually new functionality, enhancement, and bug fixes. Check out 
   the Release Notes for the OpenAM version you are considering. Links to 
   release notes for archived versions are available on the 
   <link xlink:hrf="http://forgerock.org/openam-archive.html" xlink:show="new">
   <citetitle>Archives page</citetitle></link>. Links to release notes for versions 
   10.0.0 and later are available on the <link xlink:hrf="http://docs.forgerock.org/en/openam.html" xlink:show="new">
   <citetitle>OpenAM Access Management Documentation page</citetitle></link>.</para>
   
  <para>The third part of the version number (x.x.0) indicates the version 
  is a patch. These are designed to fix issues and provide very minor
  enhancements. You may not need to apply them to your deployment, depending on
  if you have encountered the issues fixed by the patch. You can also have patches 
  specific to your deployment, in which case the version number does not change. </para>
    
<!-- TO DO  Add information about even and odd minor releases. -->
    
 </section>

 <section xml:id="vs">
  <title>Update vs Upgrade: Deciding What You Need</title> 
  
  <para>You know that you need a more current version of OpenAM, but do you
  need to update or upgrade? What's the difference and how much work will
  it require to get OpenAM working again? The short answer is the version
  number indicates whether you are updating or upgrading.</para>
  
  <para>You are <emphasis>updating</emphasis> if there is a switch in the 
  minor release number. For example, if your current instance is 
  OpenAM 10.0.0, you are updating when you switch to OpenAM 10.1.0. You
  can skip some minor releases, depending on if you want to use any of 
  the new features, enhancements, or to apply any bug fixes.</para>
  
  <para>You are <emphasis>upgrading</emphasis> if there is a switch in the 
  major release number. Upgrading is generally trickier than updating because
  you usually have to either reinstall OpenAM or use the upgrade utility that
  was made available with OpenAM 10.0.0. If you are several 
  major versions behind the most recently released version, you are working
  from a legacy deployment, which should be treated differently than the
  typical upgrade.</para>
  
 </section>
 
 <section xml:id="patches">
  <title>Applying Patches</title> 
  
  <para>Sometimes you may receive a patch file specific to your OpenAM instance
  or you may want to make some changes of your own. Depending on your servlet 
  container, you may need to create a new <filename>.war</filename> file and 
  redeploy OpenAM. Containers like Tomcat will extract the <filename>.war</filename> 
  file to a persistent directory, so you will not need to rebuild the 
  <filename>.war</filename> to apply the patch. However, ForgeRock strongly recommends
  that in production environments you rebuild the <filename>.war</filename> file.
  Since this is not a change in the version, ForgeRock strongly recommends that you 
  patch the <filename>.war</filename> file, perform your tests on the patched 
  <filename>.war</filename> file, and then use the patched <filename>.war</filename> 
  file in production when satisfied with your test results.</para>
  
 </section>

 <section xml:id="legacy">
  <title>Handling a Legacy Deployment</title> 

  <para>Any deployment that is OpenAM 9.0.x or earlier is considered a legacy 
  deployment. While it is possible to upgrade from early versions (8.x.x. and earlier) 
  without upgrading to 9.x.x, it is not recommended. The greater the gap between your 
  current instance and the desired upgrade, the greater the potential issues you will
  have in the transition.</para>
  
  <para>Upgrading a legacy deployment can be difficult. For complex and legacy 
  deployments, ForgeRock can assist you through the process. Send mail to
  <link xlink:href="mailto:info@forgerock.com">info@forgerock.com</link> for
  more information.</para>
  
 </section>

 <section xml:id="agents">
  <title>Updating Policy Agents</title> 
  
  <para>Most deployments of OpenAM include a policy agent. The 
  <link xlink:href="install-guide#install-guide" xlink:role="http://docbook.org/xlink/role/olink"
   ><citetitle>Installation Guide</citetitle></link> provides information about the three different
   types of policy agents.</para>
   
  <para>The examples in this guide use the Apache 2.2 web policy agent.</para>

  <para>Java EE servlet containers are each unique in the way you deploy
  the OpenAM web application. If you have a Java EE agent, please refer
  to the applicable documentation for the servlet for any special tasks
  that should be performed before deploying the application to the container.</para>
  
  <para>Review the <link xlink:href="install-guide#install-guide" 
  xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Installation Guide</citetitle></link> 
  for your particular container for information on policy agent compatibility.</para>
  
 </section>
  
 <section xml:id="update-customization-basics">
  <title>Handling Customization</title> 

  <para>Most deployments of OpenAM are customized. Before you update, upgrade, or 
  apply a patch, you should make sure you follow guidelines on handling 
  customization.</para>
  
  <para>Customization includes any changes you have made to OpenAM, including changes
  to your client facing page. There are two types of customizations, each with 
  several variations.</para>
  
  <itemizedlist>
  
   <listitem>
    <para>Changes to the web application, including additions</para>
    
    <itemizedlist>
     <listitem>
      <para>Customized web content, such the login page and localization</para>
     </listitem>
      <listitem>
       <para>File components with custom plugins, such as login JavaServer Pages (JSPs)
       and callback Extensible Markup Language (XML)</para>
      </listitem>
      <listitem>
       <para>Patches, such as new versions of class files or libraries</para>
      </listitem>
     </itemizedlist>
    </listitem>

    <listitem>
      <para>Changes to the configuration</para>
     <itemizedlist>
      <listitem>
       <para>Instance configuration, such as realms, authorization modules, and 
       policies</para>
      </listitem>
      <listitem>
       <para>Changed services, such as policy plugins and authorization modules</para>
      </listitem>
     </itemizedlist>
    </listitem>

  </itemizedlist>
  
  <para>Any change to your <filename>.war</filename> should be tracked for easier 
  application to future releases of OpenAM. The tracked changes can then be 
  added to newer versions.</para>
  
  <para>Configuration data is stored in the configuration store. Full export 
  is a good way to backup your current configuration in case you need to roll  
  it back, but it may not be able to restore configuration data after an upgrade.</para>
  
 </section>

 <section xml:id="restoring">
  <title>Restoring a Previous Instance</title> 
  
  <para>Sometimes a deployment does not go smoothly or a feature changes and 
  you will not have time in the foreseeable future to catch up with the latest 
  changes. You can restore your previous deployment until you have time to tackle
  the issues. This highlights the reason why you should always backup current 
  deployments before you update or upgrade.</para>
  
  <para>This guide does not cover OpenAM instances that are dependent on external
  replicated directory server. ForgeRock can assist you with restoring these types of
  deployments. Send mail to <link xlink:href="mailto:info@forgerock.com"
  >info@forgerock.com</link> for  more information.</para>
    
 </section>

</chapter>
