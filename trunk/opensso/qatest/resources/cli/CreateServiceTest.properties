# The contents of this file are subject to the terms
#  of the Common Development and Distribution License
# (the License). You may not use this file except in
# compliance with the License.
#
# You can obtain a copy of the License at
# https://opensso.dev.java.net/public/CDDLv1.0.html or
# opensso/legal/CDDLv1.0.txt
# See the License for the specific language governing
# permission and limitations under the License.
#
# When distributing Covered Code, include this CDDL
# Header Notice in each file and include the License file
# at opensso/legal/CDDLv1.0.txt.
# If applicable, add the following below the CDDL Header,
# with the fields enclosed by brackets [] replaced by
# your own identifying information:
# "Portions Copyrighted [year] [name of copyright owner]"
#
#  $Id: CreateServiceTest.properties,v 1.1 2008/09/09 17:57:53 srivenigan Exp $
# 
# Copyright 2008 Sun Microsystems Inc. All Rights Reserved
#

#
# Property definitions.
#
# description - the purpose of the test case.
# create-service - name of the test service(s) that is to be created. A test 
#         service xml file is created using this name. Multiple services should 
#         be seperated by a comma (","). 
# use-valid-service-xml - if "true" a valid test service xml is created and 
#         invalid xml is created if "false". All service xml(s) are generated 
#         and stored at location "<QATEST_HOME>/built/classes/cli".
# init-revision-number - a revision number to be assigned to generated service.
# use-verbose-option - a binary property indicating whether the verbose option
#         should be used.
# use-debug-option - a binary property indicating whether the debug option 
#         should be used.
# use-long-options - a binary property indicating whether the long form of 
#         the options (e.g. "--servicename") instead of the short form ("-s")
# message-to-find - one or more strings that should be present in the output
#         (for a test where expected-exit-code equals 0) or the error (for a 
#         test where expected-exit-code does not equal 0).  Multiple strings
#         should be separated by a semi-colon (";").
# continue-adding-service - if "true" adds one or more services continuously.
# expected-exit-code - the expected exit status for CLI comand being issued. 
#         Successful command should return "0" and failed 
#         command should return a non-zero value.


createService-test1-description=Create service testServiceA with revision number 10 using valid xml, long options.
createService-test1-create-service=testServiceA
createService-test1-use-valid-service-xml=true
createService-test1-init-revision-number=10
createService-test1-use-verbose-option=false
createService-test1-use-debug-option=false
createService-test1-use-long-options=true
createService-test1-message-to-find=Service was added.
createService-test1-continue-adding-service=false
createService-test1-expected-exit-code=0

createService-test2-description=Create service(s) testServiceB,testServiceC using continuous adding option with revision numbers 20,30 using valid xml, long options.
createService-test2-create-service=testServiceB,testServiceC
createService-test2-use-valid-service-xml=true
createService-test2-init-revision-number=20,30
createService-test2-use-verbose-option=false
createService-test2-use-debug-option=false
createService-test2-use-long-options=true
createService-test2-message-to-find=
createService-test2-continue-adding-service=true
createService-test2-expected-exit-code=0

createService-test3-description=Create service testServiceD with revision number 10 using valid xml, debug, long options.
createService-test3-create-service=testServiceD
createService-test3-init-revision-number=30
createService-test3-use-valid-service-xml=true
createService-test3-use-verbose-option=false
createService-test3-use-debug-option=true
createService-test3-use-long-options=true
createService-test3-message-to-find=
createService-test3-continue-adding-service=false
createService-test3-expected-exit-code=0

createService-test4-description=Create service testServiceE with revision number 10 using valid xml, verbose, debug, long options.
createService-test4-create-service=testServiceE
createService-test4-init-revision-number=10
createService-test4-use-valid-service-xml=true
createService-test4-use-verbose-option=true
createService-test4-use-debug-option=true
createService-test4-use-long-options=false
createService-test4-message-to-find=
createService-test4-continue-adding-service=false
createService-test4-expected-exit-code=0

createService-test5-description=Create service(s) testServiceF, testServiceG using continuous adding option with revision numbers 20,30 using invalid xml, long options.
createService-test5-create-service=testServiceF,testServiceG
createService-test5-init-revision-number=20,30
createService-test5-use-valid-service-xml=true
createService-test5-use-verbose-option=false
createService-test5-use-debug-option=false
createService-test5-use-long-options=true
createService-test5-message-to-find=
createService-test5-continue-adding-service=true
createService-test5-expected-exit-code=0

createService-test6-description=Create service testServiceH with revision number 30 using invalid xml, short options.
createService-test6-create-service=testServiceH
createService-test6-init-revision-number=30
createService-test6-use-valid-service-xml=false
createService-test6-use-verbose-option=false
createService-test6-use-debug-option=false
createService-test6-use-long-options=false
createService-test6-message-to-find=
createService-test6-continue-adding-service=false
createService-test6-expected-exit-code=127

createService-test7-description=Create service testServiceI with revision number 30 using invalid xml, short options.
createService-test7-create-service=testServiceI
createService-test7-init-revision-number=30
createService-test7-use-valid-service-xml=false
createService-test7-use-verbose-option=false
createService-test7-use-debug-option=false
createService-test7-use-long-options=false
createService-test7-message-to-find=
createService-test7-continue-adding-service=false
createService-test7-expected-exit-code=127

createService-test8-description=Create service testServiceJ with revision number 30 using invalid xml, verbose, long options.
createService-test8-create-service=testServiceJ
createService-test8-init-revision-number=50
createService-test8-use-valid-service-xml=false
createService-test8-use-verbose-option=true
createService-test8-use-debug-option=false
createService-test8-use-long-options=true
createService-test8-message-to-find=
createService-test8-continue-adding-service=false
createService-test8-expected-exit-code=127

createService-test9-description=Create empty service with revision number 30 to check invalid command, long options.
createService-test9-create-service=
createService-test9-init-revision-number=30
createService-test9-use-valid-service-xml=false
createService-test9-use-verbose-option=true
createService-test9-use-debug-option=false
createService-test9-use-long-options=true
createService-test9-message-to-find=
createService-test9-continue-adding-service=false
createService-test9-expected-exit-code=11

createService-test10-description=Create service testServiceL with revision number 30 using invalid xml, verbose, debug, long options.
createService-test10-create-service=testServiceL
createService-test10-init-revision-number=30
createService-test10-use-valid-service-xml=false
createService-test10-use-verbose-option=true
createService-test10-use-debug-option=true
createService-test10-use-long-options=true
createService-test10-message-to-find=
createService-test10-continue-adding-service=false
createService-test10-expected-exit-code=127
