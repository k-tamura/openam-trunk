<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011 ForgeRock AS
  !    
-->
<chapter xml:id='chap-federation'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Managing Federation</title>

 <para>This chapter addresses how to set up and manage federation for
 single sign on and single log out across resources belonging to
 organizations participating in a circle of trust.</para>
 
 <!-- TOOD: Cover federation as described in the existing OpenAM core
 servcies. Also, cover federation using the gateway as in the config part of
 http://resources.apexidentity.com/projects/docs/wiki/Federation -->

 <!-- TODO: Finish following section wrt configuration + metadata exchange. -->
 <section xml:id="deploy-idp-discovery">
  <title>Deploying the Identity Provider Discovery Service</title>
  <para>When you deploy OpenAM for federation and your require a service that
  discovers which identity provider corresponds to a request, you can deploy
  the identity provider discovery service (IPDS) as a separate
  application.</para>
  
  <para>You complete the following stages in deploying the IPDS web
  service.</para>
  <orderedlist>
   <listitem>
    <para>Create the .war file for the IPDS using OpenAM software.</para>
   </listitem>
   <listitem>
    <para>Deploy the IPDS .war file into your web application container.</para>
    <para>How you deploy the IPDS .war file depends on your web application
    container. The procedure in this section shows how to deploy on
    Apache Tomcat.</para>
   </listitem>
   <listitem>
    <para>Configure the IPDS you deployed.</para>
   </listitem>
   <listitem>
    <para>Configure a circle of trust to include the IPDS and the service
    provider.</para>
   </listitem>
   <listitem>
    <para>Share metadata between the IPDS you deployed and the service
    provider.</para>
   </listitem>
  </orderedlist>
  
  <procedure xml:id="create-idpdisco-file">
   <title>To Create the IPDS <filename>.war</filename> File</title>
   
   <step>
    <para>Unpack the <filename>opensso.war</filename> file into a temporary
    directory.</para>
    <screen>$ mkdir /tmp/ipds; cd /tmp/ipds
$ jar xf /path/to/OpenAM/deployable-war/opensso.war</screen>
   </step>
   <step>
    <para>Create the <filename>ipds.war</filename> file.</para>
    <screen>$ cd /path/to/OpenAM/deployable-war
$ sh createwar.sh --staging /tmp/ipds --type idpdiscovery --warfile ipds.war

WAR file was created.</screen>
   </step>
  </procedure>
  
  <procedure xml:id="deploy-idpdisco-on-tomcat">
   <title>To Deploy the IPDS on Tomcat</title>
   
   <step>
    <para>Put the <filename>ipds.war</filename> you created in the Tomcat
    <filename>webapps/</filename> directory.</para>
    <screen>$ mv ipds.war /path/to/tomcat/webapps/</screen>
   </step>
   <step>
    <para>Access the IPDS configuration screen through your browser.</para>
    <para>In this example, Apache Tomcat listens for HTTP requests on
    <literal>lb.example.com:8081</literal>, and Tomcat has unpacked the IPDS
    under <literal>/ipds</literal>, so the URL is
    <literal>http://lb.example.com:8081/ipds</literal>, which redirects to
    <filename>Configurator.jsp</filename>.</para>
   </step>
  </procedure>
  
  <procedure xml:id="configure-idpdisco-deployed">
   <title>To Configure the IPDS You Deployed</title>
   
   <step>
    <para>Configure the identity provider discovery service.</para>
    <mediaobject>
     <alt>Completed IDPS configuration screen</alt>
     <imageobject>
      <imagedata fileref="images/ipds-complete-config.png" format="PNG" />
     </imageobject>
     <textobject><para>Configure the identity provider
     discovery service.</para></textobject>
    </mediaobject>
    <para>Hints for the IPDS configuration parameters follow.</para>
    <variablelist>
     <varlistentry>
      <term>Debug Directory</term>
      <listitem>
       <para>The IPDS logs to flat files in this directory.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Debug Level</term>
      <listitem>
       <para>Default is <literal>error</literal>. Other options include
       <literal>error</literal>, <literal>warning</literal>,
       <literal>message</literal>, and <literal>off</literal>.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Cookie Type</term>
      <listitem>
       <para>The cookie type depends on TODO.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Cookie Domain</term>
      <listitem>
       <para>The cookie domain depends on TODO.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Secure Cookie</term>
      <listitem>
       <para>Set this to true if clients should only return cookies when
       a secure connection is used.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>Encode Cookie</term>
      <listitem>
       <para>Leave this true unless your OpenAM installation requires that you
       do not encode cookies. Normally cookies are encoded such that cookies
       remain valid in HTTP.</para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>HTTP-Only Cookie</term>
      <listitem>
       <para>Set to true to use HTTPOnly cookies if needed to help prevent
       third-party programs and scripts from accessing the cookies.</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </step>
   <step>
    <para>Restrict permissions to the configuration file for the IPDS in
    <filename>$HOME/libIDPDiscoveryConfig.properties</filename>, where $HOME
    corresponds to the user who runs the web container where you deployed the
    service.</para>
   </step>
  </procedure>
  
  <procedure xml:id="configure-idpdisco-circle-of-trust">
   <title>To Configure a Circle of Trust Including the IPDS</title>
   <para>The examples in this procedure expect you have a circle of trust
   configured with at least a service provider and an identity provider.</para>
   <step>
    <para>Login as OpenAM Administrator to the console on the service provider,
    and then click the Federation tab.</para>
   </step>
   <step>
    <para>Under Circle of Trust Configuration section, edit the circle of trust
    to add URLs for the IPDS for the SAMLv2 writer and reader services.</para>
    <para>In this example, the writer URL is
    <literal>http://lb.example.com:8081/ipds/saml2writer</literal>, and the
    reader URL is
    <literal>http://lb.example.com:8081/ipds/saml2reader</literal>.</para>
   </step>
   <step>
    <para>TODO, including exchange of metatdata.</para>
   </step>
  </procedure>
  
  <procedure xml:id="share-idpdisco-sp-metadata">
   <title>To Share IPDS &amp; Service Provider Metadata</title>
   
   <step>
    <para>TODO</para>
   </step>
  </procedure>
 </section>
</chapter>

