<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2013 ForgeRock, Inc.
  !    
-->
<chapter xml:id='chap-prepare-install'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Preparing For Installation</title>

 <indexterm><primary>Prerequisites</primary></indexterm>
 <para>This chapter covers prerequisites for installing OpenAM software,
 including how to prepare your application server to run OpenAM, how to prepare
 directory services to store configuration data, and how to prepare an identity
 repository to handle OpenAM identities.</para>

 <note>
  <para>If a Java Security Manager is enabled for your application server,
  add permissions before installing OpenAM.</para>
  <!-- TODO: Define permissions for supported containers. Could these be
  separate files available in the product directory when you unpack?-->
 </note>

 <section xml:id="prepare-networking">
  <title>Preparing a Fully-Qualified Domain Name</title>

  <para>OpenAM requires that you provide the fully-qualified domain name (FQDN)
  when you configure it. Before you set up OpenAM, be sure that your system
  has an FQDN such as <literal>openam.example.com</literal>. For evaluation
  purposes, you can give your system an alias using the
  <filename>/etc/hosts</filename> file on UNIX systems or
  <filename>%SystemRoot%\system32\drivers\etc\hosts</filename> on Windows. For
  deployment, make sure the FQDN is properly assigned for example using
  DNS.</para>
 </section>

 <section xml:id="prepare-java">
  <title>Preparing a Java Environment</title>

  <indexterm>
   <primary>Java requirements</primary>
  </indexterm>

  <para>OpenAM software depends on a Java runtime environment. Check the output
  of <command>java -version</command> to make sure your the version is supported
  according to the <citetitle>Release Notes</citetitle> section on <link
  xlink:href="release-notes#java-requirements" xlink:show="new"
  xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Java
  Requirements</citetitle></link>.</para>

  <section xml:id="prepare-java-sun">
   <title>Settings For Sun/Oracle Java Environments</title>

   <variablelist>
    <para>When using a Sun or Oracle Java environment set at least the
    following options.</para>

    <varlistentry>
     <term><literal>-server</literal></term>
     <listitem>
      <para>Use <literal>-server</literal> rather than
      <literal>-client</literal>.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-XX:MaxPermSize=256m</literal></term>
     <listitem>
      <para>Set the permanent generation size to 256 MB.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-Xmx1024m</literal> (minimum)</term>
     <listitem>
      <para>OpenAM requires at least a 1 GB heap. Higher volume and higher
      performance deployments require additional heap space.</para>
     </listitem>
    </varlistentry>
   </variablelist>

   <para>For additional JVM tuning recommendations, see <link xlink:show="new"
   xlink:href="admin-guide#tuning-jvm-for-openam"
   xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Java Virtual
   Machine Settings</citetitle></link>.</para>
  </section>

  <section xml:id="prepare-java-ibm">
   <title>Settings For IBM Java Environments</title>

   <variablelist>
    <para>When using an IBM Java environment set at least the following
    options.</para>

    <varlistentry>
     <term><literal>-DamCryptoDescriptor.provider=IBMJCE</literal></term>
     <term><literal>-DamKeyGenDescriptor.provider=IBMJCE</literal></term>
     <listitem>
      <para>Use the IBM Java Cryptography Extensions.</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>-Xmx1024m</literal> (minimum)</term>
     <listitem>
      <para>OpenAM requires at least a 1 GB heap. Higher volume and higher
      performance deployments require additional heap space.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
 </section>

 <section xml:id="prepare-configuration-store">
  <title>Preparing a Configuration Data Store</title>

  <indexterm>
   <primary>Directory service requirements</primary>
  </indexterm>

  <para>OpenAM stores configuration, session, and token data in an LDAP
  directory service. This data is private to OpenAM. In other words, OpenAM
  controls this data and other applications should access it, if necessary,
  only through OpenAM.</para>

  <para>OpenAM ships with an embedded OpenDJ directory server that you can
  install as part of the OpenAM configuration process. You can use the
  embedded directory server to simplify evaluation. By default OpenAM installs
  the embedded directory alongside configuration settings under the $HOME of the
  user running OpenAM, and runs the embedded directory in the same memory space
  as OpenAM. Before deploying OpenAM in production, measure the impact of
  using the embedded directory not only for relatively static configuration
  data, but also for volatile session and token data. Your tests should subject
  OpenAM to the same load patterns you expect in production. If it looks like
  a better choice to use an external directory service, then use one of the
  supported external configuration stores listed in the <link xlink:show="new"
  xlink:href="release-notes#chap-before-you-install"
  xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Release
  Notes</citetitle></link>, such as OpenDJ.</para>

  <para>With the embedded OpenDJ directory and the default configuration
  settings, OpenAM connects as directory super user, bypassing access control
  evaluation because OpenAM manages the directory as its private store.</para>

  <itemizedlist>
   <para>With an external directory service, the directory administrator can
   require OpenAM to connect with normal application credentials. In that case,
   the directory administrator must grant OpenAM specific access.</para>

   <tip>
    <para>If you are the directory administrator, and do not yet know directory
    services very well, take some time to read the documentation for your
    directory server, especially the documentation covering directory schema
    and covering how to configure access to directory data.</para>
   </tip>

   <listitem>
    <para>OpenAM requires specific directory schema definitions for the object
    classes and attribute types that describe its data. For the configuration
    store, the directory administrator should let OpenAM update the directory
    schema at configuration time.</para>

    <para>These access rights are only required during configuration, and only
    if the directory administrator does not add the OpenAM directory schema
    definitions manually.</para>

    <para>To grant the required access with OpenDJ for example, first add a
    global access control instruction (ACI) permitting the OpenAM user to modify
    schema definitions as in the following example where the OpenAM entry has DN
    <literal>uid=openam,ou=admins,dc=example,dc=com</literal>.</para>

    <programlisting language="ldif"
    >global-aci: (target = "ldap:///cn=schema")(targetattr = "attributeTypes ||
  objectClasses")(version 3.0;acl "Modify schema"; allow (write)(userdn = "
 ldap:///uid=openam,ou=admins,dc=example,dc=com");)</programlisting>

    <para>Also give the OpenAM user privileges to modify the schema and write
    to subentries such as the schema entry. Set the following attributes on
    the OpenAM user entry.</para>

    <programlisting language="ldif"
    >ds-privilege-name: subentry-write
ds-privilege-name: update-schema</programlisting>

    <!-- TODO: Reconsider the href here when DOCS-83 is implemented. -->
    <para>See the OpenDJ documentation about <link xlink:show="new"
    xlink:href="http://docs.forgerock.org/en/opendj/2.6.0/admin-guide/index/chap-privileges-acis.html"
    >Configuring Privileges &amp; Access Control</link> for a more in-depth
    explanation of how access is configured for OpenDJ.</para>
   </listitem>

   <listitem>
    <para>When OpenAM connects to an external directory service to store its
    data, it requires both read and write access.</para>

    <para>With OpenDJ for example, add following ACIs to the configuration
    base Distinguished Name (DN) entry. Adjust them as necessary if the OpenAM
    user DN differs from
    <literal>uid=openam,ou=admins,dc=example,dc=com</literal>.</para>

    <programlisting language="ldif"
    >aci: (targetattr="*")(version 3.0;acl "Allow entry search"; allow (
 search, read)(userdn = "ldap:///uid=openam,ou=admins,dc=example,dc=com");)
aci: (targetattr="*")(version 3.0;acl "Modify config entry"; allow (write)(
 userdn = "ldap:///uid=openam,ou=admins,dc=example,dc=com");)
aci: (targetcontrol="2.16.840.1.113730.3.4.3")(version 3.0;acl "Allow
  persistent search"; allow (search, read)(userdn = "ldap:///uid=openam
 ,ou=admins,dc=example,dc=com");)
aci: (version 3.0;acl "Add config entry"; allow (add)(userdn = "ldap:///
 uid=openam,ou=admins,dc=example,dc=com");)
aci: (version 3.0;acl "Delete config entry"; allow (delete)(userdn = "ldap:///
 uid=openam,ou=admins,dc=example,dc=com");)</programlisting>
   </listitem>
  </itemizedlist>

  <para>In addition, the directory administrator should index the following
  attributes used by OpenAM.</para>

     <table xml:id="prepare-configuration-store-indexes">
         <title>Configuration Data Store Indexes</title>

         <tgroup cols="2">
             <colspec colnum="1" colwidth="1*"/>
             <colspec colnum="2" colwidth="1*"/>

             <thead>
                 <row>
                     <entry>Attribute</entry>
                     <entry>Indexes Required</entry>
                 </row>
             </thead>

             <tbody>
                 <row>
                     <entry><literal>coreTokenDate01</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenDate02</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenDate03</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenDate04</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenDate05</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenExpirationDate</literal></entry>
                     <entry>ordering</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger01</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger02</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger03</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger04</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger05</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger06</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger07</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger08</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger09</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenInteger10</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString01</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString02</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString03</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString04</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString05</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString06</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString07</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString08</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString09</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString10</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString11</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString12</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString13</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString14</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenString15</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>coreTokenUserId</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>iplanet-am-user-federation-info-key</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <!-- not used
                 <row>
                  <entry><literal>memberof</literal></entry>
                  <entry>equality, presence</entry>
                 </row>
                 -->
                 <row>
                     <entry><literal>sun-fm-saml2-nameid-infokey</literal></entry>
                     <entry>equality</entry>
                 </row>
                 <row>
                     <entry><literal>sunxmlkeyvalue</literal></entry>
                     <entry>equality, substring</entry>
                 </row>
             </tbody>
         </tgroup>
     </table>
 </section>

 <section xml:id="prepare-identity-repository">
  <title>Preparing an Identity Repository</title>

  <indexterm>
   <primary>Directory service requirements</primary>
  </indexterm>

  <para>OpenAM stores user identity data in one or more identity repositories.
  In many deployments OpenAM connects to existing LDAP directory services
  for user identity data. OpenAM is designed therefore to share data in an
  identity repository with other applications.</para>

  <para>OpenAM ships with an embedded OpenDJ directory server that you can
  install as part of the OpenAM configuration process. In deployments where you
  will only ever have a few users to manage and do not need to share identity
  data with other applications, you can use the embedded store as your identity
  repository and avoid the additional overhead of maintaining a separate
  directory service. If OpenAM will share identity data with other applications,
  or if you expect to have lots of users, then connect OpenAM to an external
  identity repository. See the <link xlink:show="new"
  xlink:href="release-notes#chap-before-you-install"
  xlink:role="http://docbook.org/xlink/role/olink"><citetitle>Release
  Notes</citetitle></link> for a list of supported external identity
  repositories.</para>

  <para>When OpenAM connects to an external identity repository, the
  administrator must give OpenAM the following access rights.</para>

  <itemizedlist>
   <listitem>
    <para>OpenAM requires specific directory schema definitions for the object
    classes and attribute types that describe its data. The directory
    administrator can find these definitions in the <filename>ldif</filename>
    directory found inside the full .zip delivery.</para>

    <para>If the directory administrator chooses instead to have OpenAM update
    the directory schema at configuration time, then the directory administrator
    must grant OpenAM access.</para>

    <para>To grant this access right with OpenDJ for example, first add a global
    ACI permitting the OpenAM user to modify schema definitions as in the
    following example where the OpenAM entry has DN
    <literal>uid=openam,ou=admins,dc=example,dc=com</literal>.</para>

    <programlisting language="ldif"
    >global-aci: (target = "ldap:///cn=schema")(targetattr = "attributeTypes ||
  objectClasses")(version 3.0;acl "Modify schema"; allow (write)(userdn = "
 ldap:///uid=openam,ou=admins,dc=example,dc=com");)</programlisting>

    <para>Also give the OpenAM user privileges to modify the schema and write
    to subentries such as the schema entry. Set the following attributes on
    the OpenAM user entry.</para>

    <programlisting language="ldif">ds-privilege-name: subentry-write
ds-privilege-name: update-schema</programlisting>
   </listitem>

   <listitem>
    <para>Allow OpenAM to read directory schema.</para>

    <para>With OpenDJ for example, keep the default "User-Visible Schema
    Operational Attributes" global ACI.</para>
   </listitem>

   <listitem>
    <para>When OpenAM connects to an external identity repository, it requires
    access to read and potentially to update data.</para>

    <para>To grant the access rights with OpenDJ for example, add following ACIs
    to the configuration base DN entry. Adjust them as necessary if the OpenAM
    user DN differs from
    <literal>uid=openam,ou=admins,dc=example,dc=com</literal>.</para>

    <programlisting language="ldif"
    >aci: (targetattr="* || aci")(version 3.0;acl "Allow identity modification";
  allow (write)(userdn = "ldap:///uid=openam,ou=admins,dc=example,dc=com");)
aci: (targetattr!="userPassword||authPassword")(version 3.0;
 acl "Allow identity search"; allow (search, read)(userdn = "ldap:///
 uid=openam,ou=admins,dc=example,dc=com");)
aci: (targetcontrol="2.16.840.1.113730.3.4.3")(version 3.0;acl "Allow
  persistent search"; allow (search, read)(userdn = "ldap:///
 uid=openam,ou=admins,dc=example,dc=com");)
aci: (version 3.0;acl "Add identity"; allow (add)(userdn = "ldap:///
 uid=openam,ou=admins,dc=example,dc=com");)
aci: (version 3.0;acl "Delete identity"; allow (delete)(userdn = "ldap:///
 uid=openam,ou=admins,dc=example,dc=com");)</programlisting>
   </listitem>

   <listitem>
    <para>Allow the OpenAM user to reset other users' passwords.</para>

    <para>To grant this privilege in OpenDJ for example, set the following
    attribute on the OpenAM user entry.</para>

    <programlisting language="ldif"
    >ds-privilege-name: password-reset</programlisting>
   </listitem>
  </itemizedlist>

  <para>In addition for external directory services, the directory administrator
  should index the following attributes used by OpenAM.</para>

  <table xml:id="prepare-identity-repository-indexes">
   <title>Configuration Data Store Indexes</title>

   <tgroup cols="2">
     <colspec colnum="1" colwidth="1*"/>
     <colspec colnum="2" colwidth="1*"/>

     <thead>
      <row>
       <entry>Attribute</entry>
       <entry>Indexes Required</entry>
      </row>
     </thead>

     <tbody>
      <row>
       <entry><literal>iplanet-am-user-federation-info-key</literal></entry>
       <entry>equality</entry>
      </row>
      <!-- not used
      <row>
       <entry><literal>memberof</literal></entry>
       <entry>equality, presence</entry>
      </row>
      -->
      <row>
       <entry><literal>sun-fm-saml2-nameid-infokey</literal></entry>
       <entry>equality</entry>
      </row>
     </tbody>
   </tgroup>
  </table>
 </section>

 <section xml:id="download-openam-software">
  <title>Obtaining OpenAM Software</title>
  <indexterm>
   <primary>Downloading OpenAM</primary>
  </indexterm>
  <para>Download OpenAM releases from one of the following locations:</para>
  
   <itemizedlist>
    <listitem>
     <para><link xlink:show="new" xlink:href="http://forgerock.com/download-stack/"
     ><citetitle>Enterprise Downloads</citetitle></link> has the latest stable version of OpenAM, including
     a <filename>.zip</filename> file with all of the OpenAM components, the
     <filename>.war</filename> file, OpenAM tools, the configurator, policy
     agents, OpenIG, and documentation. Make sure you review the Software License and 
     Subscription Agreement presented before you download OpenAM files.</para>
    </listitem>
    <listitem>
     <para><link xlink:show="new" xlink:href="http://forgerock.org/openam.html"
     ><citetitle>Builds</citetitle></link> has the nightly build, including a <filename>.zip</filename> 
     file with all of the OpenAM components, the <filename>.war</filename> file, 
     OpenAM tools, the configurator, policy agents, and the .NET Fedlet. Be
     aware that this is the working version of the trunk and should not be 
     used in a production environment.</para>
    </listitem>
    <listitem>
     <para><link xlink:show="new" xlink:href="http://forgerock.org/openam-archive.html"
     ><citetitle>Archives</citetitle></link> has all versions of OpenAM, from 9.5.1 to 10.0.1. It includes
     the <filename>.zip</filename> file with all of the OpenAM components, the 
     <filename>.war</filename> file, OpenAM tools, the configurator, policy agents, 
     the WSS policy agents, and the .NET Fedlet for all previous releases.</para>
    </listitem>
   </itemizedlist>
         
  <para>For each release of the OpenAM core services, you can download the
  entire package as a <filename>.zip</filename> file, only the OpenAM 
  <filename>.war</filename> file, or only the administrative tools as a 
  <filename>.zip</filename> archive. The Archives also have only the 
  OpenAM source code used to build the release.</para>

  <para>After you download the <filename>.zip</filename> file, create a new 
  openam folder, and unzip the <filename>.zip</filename> file to access the content:</para>
  <screen>$ cd ~/Downloads
$ mkdir openam ; cd openam
$ unzip ~/Downloads/<?eval ${coreDirectoryFile}?>.zip</screen>

  <variablelist>
   <para>When you unzip the archive of the entire package, you get ldif, license, and 
   legal directories in addition to the following files.</para>
   <varlistentry>
    <term><filename><?eval ${clientsdkJarFile}?></filename></term>
    <listitem><para>The OpenAM Java client SDK library</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${distauthWarFile}?></filename></term>
    <listitem><para>The deployable .war file for distributed authentication</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${diagnosticsZipFile}?></filename></term>
    <listitem><para>The .zip file with the diagnostic tools to help troubleshoot 
    deployment issue.</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${fedletZipFile}?></filename></term>
    <listitem><para>The .zip that contains the lightweight service provider
    implementations that you can embed in your Java EE or ASP.NET applications
    to enable it to use federated access management</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${ssoadminZipFile}?></filename></term>
    <listitem><para>The .zip file that contains tools to manage OpenAM from 
    the command line</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${ssoconfigZipFile}?></filename></term>
    <listitem><para>The .zip file that contains tools to configure OpenAM from 
    the command line</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${clientSDKExamplesCliFile}?></filename></term>
    <listitem>
     <para>The .zip file containing the Java client SDK command-line examples,
     and .jar files needed to run the examples</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${clientSDKExamplesWarFile}?></filename></term>
    <listitem>
     <para>The .war file containing Java client SDK examples in a web
     application</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${ipdiscoWarFile}?></filename></term>
    <listitem>
     <para>The IDP discovery .war file, deployed as a service to service
     providers that must discover which identity provider corresponds to a
     SAML 2.0 request</para>

     <para>For details, see <link xlink:href="admin-guide#deploy-idp-discovery"
     xlink:show="new" xlink:role="http://docbook.org/xlink/role/olink"
     ><citetitle>Deploying the Identity Provider Discovery Service</citetitle></link>.</para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${coreWarFile}?></filename></term>
    <listitem><para>The deployable .war file</para></listitem>
   </varlistentry>
   <varlistentry>
    <term><filename><?eval ${serveronlyWarFile}?></filename></term>
    <listitem><para>The deployable .war file when you want to deploy OpenAM
    server without the OpenAM console</para></listitem>
   </varlistentry>
  </variablelist>
 </section>

 <section xml:id="prepare-apache-tomcat">
  <title>Preparing Apache Tomcat</title>

  <para>OpenAM examples often use Apache Tomcat as the deployment container.
  Tomcat is installed on <literal>openam.example.com</literal>, and listens
  on the default ports, with no Java Security Manager enabled. The script
  <filename>/etc/init.d/tomcat</filename> manages the service at system
  startup and shutdown. This script assumes you run OpenAM as the user
  <literal>openam</literal>.</para>

  <para>OpenAM core services require a minimum JVM heap size of 1 GB, and a
  permanent generation size of 256 MB. See <xref linkend="prepare-java" /> for
  details.</para>

  <programlisting language="shell">#!/bin/sh
#
# tomcat
#
# chkconfig: 345 95 5
# description: Manage Tomcat web application container
CATALINA_HOME="/path/to/tomcat"
export CATALINA_HOME
JAVA_HOME=/path/to/jdk
export JAVA_HOME
CATALINA_OPTS="-Xmx1024m -XX:MaxPermSize=256m"
export CATALINA_OPTS

case "${1}" in
start)
  /bin/su openam -c "${CATALINA_HOME}/bin/startup.sh"
  exit ${?}
  ;;
stop)
  /bin/su openam -c "${CATALINA_HOME}/bin/shutdown.sh"
  exit ${?}
  ;;
*)
  echo "Usage:  $0 { start | stop }"
  exit 1
  ;;
esac
</programlisting>
 </section>

 <section xml:id="prepare-glassfish-v2">
  <title>Preparing GlassFish v2</title>

  <para>Before you deploy OpenAM, update the JVM options as described in
  <xref linkend="prepare-java" />. The settings are accessible in the
  administration console under Application Server &gt; JVM Settings &gt;
  JVM Options.</para>
 </section>

 <section xml:id="prepare-jboss-5">
  <title>Preparing OpenAM &amp; JBoss 4 or 5</title>

  <para>OpenAM must be able to store its configuration between restarts. If
  you plan to deploy OpenAM as a single archive file, then unpack the .war,
  edit <filename>WEB-INF/classes/bootstrap.properties</filename> to set the
  <literal>configuration.dir</literal> property to the location where OpenAM
  has write access to store its configuration.</para>

  <screen>$ mkdir openam
$ cd openam
$ jar -xf ~/Downloads/openam/<?eval ${coreWarFile}?>
$ vi WEB-INF/classes/bootstrap.properties
$ grep ^config WEB-INF/classes/bootstrap.properties
configuration.dir=/home/jboss-user/openam</screen>

  <para>Also, OpenAM .jar libraries that conflict with JBoss libraries must
  be loaded first. Add a <filename>WEB-INF/jboss-web.xml</filename> to ensure
  this happens. (If you deploy the exploded .war, you also need to add this
  file.)</para>

  <screen>$ vi WEB-INF/jboss-web.xml
$ cat WEB-INF/jboss-web.xml</screen>

  <programlisting language="xml">&lt;!DOCTYPE jboss-web PUBLIC
  &quot;-//JBoss//DTD Web Application 5.0//EN&quot;
  &quot;http://www.jboss.org/j2ee/dtd/jboss-web_5_0.dtd&quot;&gt;
&lt;jboss-web&gt;
  &lt;class-loading java2ClassLoadingCompliance='true'&gt;
    &lt;loader-repository&gt;
    jbia.loader:loader=opensso
    &lt;loader-repository-config&gt;java2ParentDelegaton=true&lt;/loader-repository-config&gt;
    &lt;/loader-repository&gt;
  &lt;/class-loading&gt;
&lt;/jboss-web&gt;</programlisting>

  <para>Repack the .war file that you can then deploy.</para>

  <screen>$ jar -cf ../openam.war *</screen>

  <para>Before you deploy OpenAM, update the JVM options as described in
  <xref linkend="prepare-java" />.</para>
 </section>

 <section xml:id="prepare-jboss-7">
  <title>Preparing OpenAM &amp; JBoss 7</title>

    <para>JBoss 7 requires some preparation prior to deploying OpenAM. The following
    instructions provide guidance for both standalone and domain deployments.
    OpenAM must be able to store its configuration between restarts.</para>

   <procedure>
    <title>Preparing JBoss 7</title>

    <step>
     <para>Stop JBoss.</para>
    </step>

    <step>
     <para>Update the container's <filename>module.xml</filename> file, such as
     <filename>/path/to/jboss7/modules/sun/jdk/main/module.xml</filename>.</para>

     <substeps>
      <step>
       <para>Add the Sun x509 security module path to the JBoss 7
       configuration (<literal>sun/security/x509</literal>).</para>

       <para>The following example shows the change for JBoss 7.1.1.</para>

       <programlisting language="xml">&lt;path name="com/sun/security/auth"/&gt;
&lt;path name="com/sun/security/auth/module"/&gt;
&lt;path name ="sun/security/x509"/&gt; &lt;!-- path added here -->
&lt;path name="sun/misc"/></programlisting>
      </step>

      <step>
       <para>When using <command>ssoadm</command> or the distributed
       authentication service (DAS), also add the following path.</para>

       <literallayout class="monospaced"
       >&lt;path name="com/sun/org/apache/xerces/internal/dom" /></literallayout>
      </step>

      <step>
       <para>For JBoss 7.1.3.Final (WildFly), remove the following line to avoid
       clashes with XML classes included in OpenAM.</para>

       <literallayout class="monospaced"
       >&lt;path name="com/sun/org/apache/xml/internal/security/transforms/implementations" /></literallayout>
      </step>
     </substeps>
    </step>

    <step>
     <para>Disable modules that conflict with OpenAM REST libraries. All jaxrs 
     references need to be removed from the configuration.</para>
     
     <note>
      <para>For JBoss 7.1.0 Final, in addition to removing the following references,
      remove all <literal>org.jboss.as.webservices</literal> references. You will need
      to remove the extension and all related subsystem tags.</para>
     </note>

     <stepalternatives>
      <step>
       <para>The following example uses JBoss 7.1.1 standalone. Remember to
       remove all subsystems and extension tags associated with <literal>urn:jboss:domain:jaxrs:1.0</literal>.</para>
       <screen>$ vi /path/to/jboss7/standalone/configuration/standalone.xml
 &lt;extension module="org.jboss.as.ejb3"/&gt;
-  &lt;extension module="org.jboss.as.jaxrs"/&gt;
....
-  &lt;subsystem xmlns="urn:jboss:domain:jaxrs:1.0"/&gt;
 &lt;subsystem xmlns="urn:jboss:domain:jca:1.1"&gt;</screen>
     </step> 
     <step>
      <para>The following example uses JBoss 7.1.1 for a managed domain.</para>
      <screen>$ cp /path/to/jboss7/domain/configuration/
 $vi domain.xml
 &lt;extension module="org.jboss.as.ejb3"/&gt;
-  &lt;extension module="org.jboss.as.jaxrs"/&gt;
....
-  &lt;subsystem xmlns="urn:jboss:domain:jaxrs:1.0"/&gt;
 &lt;subsystem xmlns="urn:jboss:domain:jca:1.1"&gt;</screen>
      </step>
     </stepalternatives>
    </step>

    <step>
     <para>Update the <filename>openam.war</filename> before deploying OpenAM.</para>
     <para>JBoss will deploy applications from different temporary directories 
     every time you restart the server, forcing you to reconfigure OpenAM. Updating 
     or expanding the <filename>openam.war</filename> will anchor the configuration.</para>

      <orderedlist numeration="arabic">
        <listitem>
         <para>Create a temporary directory and expand the <filename>openam.war</filename>.</para>
         <screen> $ cd /temp
 $ mkdir openamtemp ; cd openamtemp
 $ jar xvf ~/Downloads/<?eval ${coreWarFile}?></screen>
        </listitem>
        <listitem>
         <para>Update the <literal># configuration.dir=</literal> line in the 
         <filename>bootstrap.properties</filename> file so that it appears as follows, 
         and save the change.</para>
         <screen>$ vi WEB-INF/classes/bootstrap.properties
  # This property should also be used when the system user that 
  # is running the web/application server process does not have
  # a home directory. i.e. System.getProperty("user.home") returns
  # null.
  
  configuration.dir=$HOME/openamJboss</screen>
        </listitem>
        <listitem>
         <para>Rebuild the <filename>openam.war</filename> file.</para>
         <screen>$ jar cvf ../openam.war *</screen>
        </listitem>
        </orderedlist>
   </step>
   <step>
    <para>Set the following JVM options before deploying the <filename>openam.war</filename>
    file.</para>
     <variablelist>
      <varlistentry>
       <term><literal>-Dorg.apache.tomcat.util.http.ServerCookie.ALWAYS_ADD_EXPIRES=true</literal></term>
       <listitem>
        <para>Make sure that headers include the <literal>Expires</literal>
        attribute rather than only <literal>Max-Age</literal>, as some versions
        of Internet Explorer do not support <literal>Max-Age</literal>.</para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>Additional Options</term>
       <listitem>
        <para>See <xref linkend="prepare-java" /> for details.</para>
       </listitem>
      </varlistentry>
     </variablelist>
    </step> 
   </procedure>
 </section>

 <section xml:id="prepare-jetty-7">
  <title>Preparing Jetty 7</title>

  <para>When you deploy OpenAM, make sure you start Jetty with enough
  memory.</para>

  <screen>$ cd /path/to/jetty
$ java -server -Xmx1024m -XX:MaxPermSize=256m -jar start.jar</screen>

  <para>For details on the JVM options to use, see
  <xref linkend="prepare-java" />.</para>
 </section>

 <section xml:id="prepare-oracle-weblogic">
  <title>Preparing Oracle WebLogic</title>

  <para>Before you deploy OpenAM, update the JVM options as described in
  <xref linkend="prepare-java" />.</para>
 </section>

 <section xml:id="prepare-ibm-websphere">
  <title>Preparing IBM<superscript>®</superscript> WebSphere<superscript>®</superscript></title>

  <para>Before you deploy OpenAM, use the Administrator console to update
  JVM options as described in <xref linkend="prepare-java" />.</para>
 </section>

</chapter>
