<?xml version="1.0" encoding="UTF-8"?>
<!--
  ! CCPL HEADER START
  !
  ! This work is licensed under the Creative Commons
  ! Attribution-NonCommercial-NoDerivs 3.0 Unported License.
  ! To view a copy of this license, visit
  ! http://creativecommons.org/licenses/by-nc-nd/3.0/
  ! or send a letter to Creative Commons, 444 Castro Street,
  ! Suite 900, Mountain View, California, 94041, USA.
  !
  ! You can also obtain a copy of the license at
  ! src/main/resources/legal-notices/CC-BY-NC-ND.txt.
  ! See the License for the specific language governing permissions
  ! and limitations under the License.
  !
  ! If applicable, add the following below this CCPL HEADER, with the fields
  ! enclosed by brackets "[]" replaced with your own identifying information:
  !      Portions Copyright [yyyy] [name of copyright owner]
  !
  ! CCPL HEADER END
  !
  !      Copyright 2011-2012 ForgeRock AS
  !    
-->
<chapter xml:id='chap-upgrade'
 xmlns='http://docbook.org/ns/docbook'
 version='5.0' xml:lang='en'
 xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
 xsi:schemaLocation='http://docbook.org/ns/docbook http://docbook.org/xml/5.0/xsd/docbook.xsd'
 xmlns:xlink='http://www.w3.org/1999/xlink'
 xmlns:xinclude='http://www.w3.org/2001/XInclude'>
 <title>Upgrading OpenAM Core Services</title>
 <indexterm><primary>Upgrading</primary></indexterm>
 <para>This chapter shows you how to patch and to upgrade OpenAM core services.
 See the <citetitle>Policy Agent Installation Guide</citetitle> for instructions
 on upgrading OpenAM agents.</para>

 <para>This chapter uses Apache Tomcat in examples. If you use a different
 web application container for OpenAM, adapt the examples to your
 environment.</para>

 <note>
  <para>For complex and legacy deployments, ForgeRock can assist you through
  the upgrade process. Send mail to
  <link xlink:href="mailto:info@forgerock.com">info@forgerock.com</link> for
  more information.</para>
 </note>
 
 <note>
  <para>Following an upgrade to OpenAM 10.1.0 XPress release, all users will
  need to login again because OpenAM no longer uses Open Message Queue or 
  Berkeley DB Java Edition for session failover. </para>
 </note>
 
 <procedure xml:id="upgrade-from-openam">
  <title>To Upgrade From OpenAM 9.5 Or Later</title>
  
  <para>ForgeRock has considerably simplified OpenAM core services upgrade
  with respect to earlier versions. If you have already moved to OpenAM 9.5
  or later, follow these steps.</para>
  
  <step>
   <para>If you have customized end user OpenAM files for your deployment,
   build a new .war with the new version of OpenAM that includes your
   customizations.</para>
  </step>
  <step>
   <para>If OpenAM is running in a site deployment with multiple servers,
   configure your load balancer to take the OpenAM server out of the site
   pool during upgrade.</para>
  </step>
  <step>
   <para>Stop the container where OpenAM is running.</para>
   <screen>$ /etc/init.d/tomcat stop
Password: 
Using CATALINA_BASE:   /path/to/tomcat
Using CATALINA_HOME:   /path/to/tomcat
Using CATALINA_TMPDIR: /path/to/tomcat/temp
Using JRE_HOME:        /path/to/jdk/jre
Using CLASSPATH:       /path/to/tomcat/bin/bootstrap.jar:
 /path/to/tomcat/bin/tomcat-juli.jar</screen>
  </step>
  <step>
   <para>Make a copy of the OpenAM configuration directory that was created at
   installation time.</para>
   <para>In the following example, the OpenAM configuration directory is
   <filename>$HOME/openam</filename>, where <literal>$HOME</literal> is the
   home directory of the user running the container where OpenAM is
   deployed.</para>
   <screen>$ cd $HOME
$ cp -r openam openam-orig</screen>
   <para>Files in the hidden <filename>$HOME/.openssocfg/</filename> directory
   are not changed during upgrade.</para>
  </step>
  <step>
   <para>Make a backup copy of the OpenAM configuration stored in your
   configuration store.</para>
  </step>
  <step>
   <para>Move the current OpenAM web application aside.</para>
   <screen>$ cd /path/to/tomcat/webapps
$ mv openam openam-orig ; mv openam.war openam.war.orig</screen>
  </step>
  <step>
   <para>Deploy the new OpenAM in place of the old.</para>
   <screen>$ cp /path/to/new/OpenAM/openam/<?eval ${coreWarFile}?>
    openam.war</screen>
  </step>
  <step>
   <para>If your container caches OpenAM files, clear out the cache.</para>
   <screen>$ rm -rf /path/to/tomcat/work/Catalina/localhost/openam</screen>
  </step>
  <step>
   <para>Start the container to run the new OpenAM.</para>
   <screen>$ /etc/init.d/tomcat start
Password: 
Using CATALINA_BASE:   /path/to/tomcat
Using CATALINA_HOME:   /path/to/tomcat
Using CATALINA_TMPDIR: /path/to/tomcat/temp
Using JRE_HOME:        /path/to/jdk/jre
Using CLASSPATH:       /path/to/tomcat/bin/bootstrap.jar:
 /path/to/tomcat/bin/tomcat-juli.jar</screen>
  </step>
  <step>
   <para>In your browser, visit the location where OpenAM is deployed, such
   as <literal>http://openam.example.com:8080/openam</literal>, and then
   click Upgrade to OpenAM <?eval ${serverDocTargetVersion}?>.</para>
   <mediaobject xml:id="figure-upgrade-initial-screen">
    <alt>Initial OpenAM upgrade screen</alt>
    <imageobject>
     <imagedata fileref="images/upgrade-initial-screen.png" format="PNG" />
    </imageobject>
    <textobject><para>The initial upgrade screen lets you choose to upgrade
    or to restore the configuration.</para></textobject>
   </mediaobject>
  </step>
  <step>
   <para>In the Upgrading OpenAM screen, click Save Report to download an
   OpenAM Upgrade Report listing necessary configuration changes, and
   then click Upgrade.</para>
   <mediaobject xml:id="figure-upgrade-report">
    <alt>Save upgrade report window</alt>
    <imageobject>
     <imagedata fileref="images/upgrade-report.png" format="PNG" />
    </imageobject>
    <textobject>
     <para>OpenAM lets you save a report of upgrade changes before
     completing the upgrade operation.</para>
    </textobject>
   </mediaobject>
   <para>Log messages pertaining to upgrade of the embedded directory are
   written to the web container log.</para>
  </step>
  <step>
   <para>When upgrade completes, restart OpenAM or the container where it runs,
   and continue your work.</para>
   <para>In site deployments with multiple OpenAM servers using the embedded
   OpenDJ configuration store, you must keep the first upgraded server running
   when upgrading the others.</para>
   <para>This allows secondary servers to correctly replicate their embedded
   configuration stores with that of the first server you upgraded.</para>
  </step>
  <step>
   <para>If OpenAM is running in a site deployment with multiple servers,
   configure your load balancer to return the OpenAM server to the site
   pool.</para>
  </step>
 </procedure>
 
 <tip>
  <para>You can use the <filename>upgrade.jar</filename> utility, installed
  from <filename>ssoConfiguratorTools.zip</filename>, to perform the upgrade
  configuration after you deploy the new OpenAM .war file.</para>
  
  <para>Instead of upgrading the new OpenAM deployment through OpenAM console
  as described in the procedure above, edit the
  <filename>sampleupgrade</filename> properties file next to
  <filename>upgrade.jar</filename> to set the <literal>SERVER_URL</literal>
  and <literal>DEPLOYMENT_URI</literal> for your environment, and then
  run the <filename>upgrade.jar</filename> utility.</para>
  
  <screen>$ java -jar upgrade.jar --file sampleupgrade
...
Upgrade Complete.</screen>
 </tip>
 
 <procedure xml:id="revert-from-upgrade">
  <title>To Revert From OpenAM Upgrade</title>
  
  <para>If you must revert from an upgraded version of OpenAM, then the
  quickest way to return to the earlier version is to restore all the earlier
  files. You also must return to an earlier version of the configuration store
  data.</para>
  <step>
   <para>Stop OpenAM or the container where OpenAM is running.</para>
  </step>
  <step>
   <para>Restore the old version of OpenAM files, including the .war and the
   configuration directory.</para>
  </step>
  <step>
   <para>If your container caches OpenAM files, clear out the cache.</para>
   <screen>$ rm -rf /path/to/tomcat/work/Catalina/localhost/openam</screen>
  </step>
  <step>
   <para>Restore the earlier version of the configuration store data.</para>
  </step>
  <step performance="optional">
   <para>If you run OpenAM in Tomcat, remove files from the working directory
   where Tomcat has stored JSP files from the upgraded version.</para>
   <screen>$ rm -fr /path/to/tomcat/work/Catalina/localhost/openam</screen>
   <para>If you skip this step, you can see an error like the following when
   logging into the console after reverting to the older version.</para>
   <screen>amConsole:10/29/2011 05:42:51:812 PM BST: Thread[http-8080-3,5,main]
ERROR: ConsoleServletBase.onUncaughtException
javax.servlet.ServletException: java.lang.NoClassDefFoundError:
 org/forgerock/openam/console/ui/taglib/header/CCHtmlHeaderTag
        at org.apache.jasper.runtime.PageContextImpl.doHandlePageException
         (PageContextImpl.java:862)
        at org.apache.jasper.runtime.PageContextImpl.handlePageException
         (PageContextImpl.java:791)
        at org.apache.jsp.console.task.Home_jsp._jspService(Home_jsp.java:564)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)</screen>
  </step>
  <step>
   <para>Start the earlier version of OpenAM or the container where OpenAM
   runs.</para>
  </step>
 </procedure>
</chapter>
